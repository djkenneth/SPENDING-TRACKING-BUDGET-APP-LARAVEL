{
    "openapi": "3.0.0",
    "info": {
        "title": "Budget App API",
        "description": "API documentation for Budget Management Application",
        "contact": {
            "email": "admin@budgetapp.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api": {},
        "/api/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all accounts",
                "description": "Get all user accounts with optional filtering",
                "operationId": "getAccounts",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by account type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cash",
                                "bank",
                                "credit_card",
                                "investment",
                                "ewallet"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "description": "Include inactive accounts",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 45000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Create new account",
                "description": "Create a new financial account",
                "operationId": "createAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "balance"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Main Bank Account"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "cash",
                                            "bank",
                                            "credit_card",
                                            "investment",
                                            "ewallet"
                                        ],
                                        "example": "bank"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "example": 1000.5
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#2196F3"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "account_balance"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "My primary savings account"
                                    },
                                    "account_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "institution": {
                                        "type": "string",
                                        "example": "BDO"
                                    },
                                    "credit_limit": {
                                        "description": "For credit cards only",
                                        "type": "number",
                                        "example": 50000
                                    },
                                    "include_in_net_worth": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account details",
                "description": "Get specific account details with statistics",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Account"
                                                },
                                                {
                                                    "properties": {
                                                        "statistics": {
                                                            "properties": {
                                                                "total_income": {
                                                                    "type": "number",
                                                                    "example": 10000
                                                                },
                                                                "total_expenses": {
                                                                    "type": "number",
                                                                    "example": 8000
                                                                },
                                                                "transaction_count": {
                                                                    "type": "integer",
                                                                    "example": 150
                                                                },
                                                                "average_transaction": {
                                                                    "type": "number",
                                                                    "example": 133.33
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account",
                "description": "Update account information",
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Account Name"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "example": 2000
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#4CAF50"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "account_balance_wallet"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "credit_limit": {
                                        "type": "number",
                                        "example": 75000
                                    },
                                    "include_in_net_worth": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account",
                "description": "Delete an account",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete account"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/transactions": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account transactions",
                "description": "Get transactions for a specific account",
                "operationId": "getAccountTransactions",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Transaction type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense",
                                "transfer"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/balance-history": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get balance history",
                "description": "Get account balance history over time",
                "operationId": "getAccountBalanceHistory",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Period",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "balance": {
                                                        "type": "number"
                                                    },
                                                    "change_amount": {
                                                        "type": "number"
                                                    },
                                                    "change_type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/transfer": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Transfer between accounts",
                "description": "Transfer money between two accounts",
                "operationId": "transferBetweenAccounts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_account_id",
                                    "to_account_id",
                                    "amount"
                                ],
                                "properties": {
                                    "from_account_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "to_account_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "amount": {
                                        "type": "number",
                                        "example": 500
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Transfer to savings"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Monthly savings transfer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "transfer_id": {
                                                    "type": "integer"
                                                },
                                                "from_transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "to_transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "from_account_balance": {
                                                    "type": "number"
                                                },
                                                "to_account_balance": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/adjust-balance": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Adjust account balance",
                "description": "Manually adjust account balance to match actual balance",
                "operationId": "adjustAccountBalance",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "balance",
                                    "reason"
                                ],
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "example": 5000
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Monthly reconciliation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Balance adjusted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account balance adjusted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/types": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account types",
                "description": "Get available account types and their configurations",
                "operationId": "getAccountTypes",
                "responses": {
                    "200": {
                        "description": "Account types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "icon": {
                                                        "type": "string"
                                                    },
                                                    "color": {
                                                        "type": "string"
                                                    },
                                                    "supports_credit_limit": {
                                                        "type": "boolean"
                                                    },
                                                    "default_include_in_net_worth": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/summary": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get accounts summary",
                "description": "Get summary statistics of all accounts",
                "operationId": "getAccountsSummary",
                "responses": {
                    "200": {
                        "description": "Summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_accounts": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 45000
                                                },
                                                "total_assets": {
                                                    "type": "number",
                                                    "example": 55000
                                                },
                                                "total_liabilities": {
                                                    "type": "number",
                                                    "example": 10000
                                                },
                                                "accounts_by_type": {
                                                    "type": "object"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/performance-metrics": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get performance metrics",
                "description": "Get account performance metrics over time",
                "operationId": "getAccountPerformanceMetrics",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "months",
                        "in": "query",
                        "description": "Number of months to analyze (1-24)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "monthly_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "string"
                                                            },
                                                            "income": {
                                                                "type": "number"
                                                            },
                                                            "expenses": {
                                                                "type": "number"
                                                            },
                                                            "net": {
                                                                "type": "number"
                                                            },
                                                            "transaction_count": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "average_income": {
                                                    "type": "number"
                                                },
                                                "average_expenses": {
                                                    "type": "number"
                                                },
                                                "average_net": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/sync-balance": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Sync account balance",
                "description": "Synchronize account balance with actual balance",
                "operationId": "syncAccountBalance",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "actual_balance"
                                ],
                                "properties": {
                                    "actual_balance": {
                                        "type": "number",
                                        "example": 10000
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Bank statement reconciliation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Balance synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account balance synced successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "old_balance": {
                                                    "type": "number"
                                                },
                                                "new_balance": {
                                                    "type": "number"
                                                },
                                                "difference": {
                                                    "type": "number"
                                                },
                                                "account": {
                                                    "$ref": "#/components/schemas/Account"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/bulk/update": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Bulk update accounts",
                "description": "Update multiple accounts at once",
                "operationId": "bulkUpdateAccounts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accounts"
                                ],
                                "properties": {
                                    "accounts": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Name"
                                                },
                                                "color": {
                                                    "type": "string",
                                                    "example": "#FF0000"
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "account_balance"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "include_in_net_worth": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Accounts updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Accounts updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "currency": {
                                        "description": "Default currency",
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "timezone": {
                                        "description": "User timezone",
                                        "type": "string",
                                        "example": "Asia/Manila"
                                    },
                                    "language": {
                                        "description": "Preferred language",
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdefghijklmnop"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and receive token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "description": "Remember me",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "2|xyzabcdefghijk"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke current user token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/logout-all": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout from all devices",
                "description": "Revoke all user tokens",
                "operationId": "logoutAll",
                "responses": {
                    "200": {
                        "description": "Logged out from all devices successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out from all devices successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get current authenticated user details",
                "operationId": "getAuthUser",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "description": "Revoke current token and issue a new one",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "3|newtoken123456"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link to user's email",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-here"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This password reset token is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "description": "Change authenticated user's password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentPassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Verify user's email address using token",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "verification-token-here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification",
                "description": "Resend verification email to user",
                "operationId": "resendVerification",
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "description": "Check if API is running",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "example": "2025-01-15T10:00:00Z"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "description": "Get current authenticated user profile",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "description": "Update authenticated user profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+639123456789"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "Asia/Manila"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user password",
                "description": "Change authenticated user's password",
                "operationId": "updateUserPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentPass123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPass123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPass123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/avatar": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Upload avatar",
                "description": "Upload or update user avatar image",
                "operationId": "uploadAvatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "avatar"
                                ],
                                "properties": {
                                    "avatar": {
                                        "description": "Avatar image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "avatar_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/avatars/user1.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete avatar",
                "description": "Remove user avatar image",
                "operationId": "deleteAvatar",
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/preferences": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user preferences",
                "description": "Get user preferences and settings",
                "operationId": "getUserPreferences",
                "responses": {
                    "200": {
                        "description": "Preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                },
                                                "timezone": {
                                                    "type": "string",
                                                    "example": "Asia/Manila"
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "preferences": {
                                                    "type": "object"
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user preferences",
                "description": "Update user preferences and settings",
                "operationId": "updateUserPreferences",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "preferences": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user settings",
                "description": "Get all user settings",
                "operationId": "getUserSettings",
                "responses": {
                    "200": {
                        "description": "Settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user settings",
                "description": "Update user settings",
                "operationId": "updateUserSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "settings"
                                ],
                                "properties": {
                                    "settings": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/dashboard-stats": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get dashboard statistics",
                "description": "Get user dashboard statistics and metrics",
                "operationId": "getDashboardStats",
                "responses": {
                    "200": {
                        "description": "Dashboard stats retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "total_accounts": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_categories": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "current_month_income": {
                                                    "type": "number",
                                                    "example": 5000
                                                },
                                                "current_month_expenses": {
                                                    "type": "number",
                                                    "example": 3000
                                                },
                                                "total_transactions": {
                                                    "type": "integer",
                                                    "example": 250
                                                },
                                                "active_budgets": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "active_goals": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "active_debts": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "upcoming_bills": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "unread_notifications": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/activity-summary": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get activity summary",
                "description": "Get user activity summary for specified period",
                "operationId": "getActivitySummary",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to include (default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "transactions_count": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "recent_transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Groceries"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 150.5
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "expense"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2024-01-15"
                                                            },
                                                            "account": {
                                                                "type": "string",
                                                                "example": "Cash"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Food & Dining"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "budget_utilization": {
                                                    "type": "number",
                                                    "example": 75.5
                                                },
                                                "goals_progress": {
                                                    "type": "number",
                                                    "example": 60
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/account-summary": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get account summary",
                "description": "Get summary of all user accounts",
                "operationId": "getAccountSummary",
                "responses": {
                    "200": {
                        "description": "Account summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 25000
                                                },
                                                "accounts_by_type": {
                                                    "type": "object"
                                                },
                                                "accounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Main Bank"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "bank"
                                                            },
                                                            "balance": {
                                                                "type": "number",
                                                                "example": 15000
                                                            },
                                                            "currency": {
                                                                "type": "string",
                                                                "example": "PHP"
                                                            },
                                                            "color": {
                                                                "type": "string",
                                                                "example": "#2196F3"
                                                            },
                                                            "icon": {
                                                                "type": "string",
                                                                "example": "account_balance"
                                                            },
                                                            "include_in_net_worth": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/export-data": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Export user data",
                "description": "Export all user data in JSON format",
                "operationId": "exportUserData",
                "responses": {
                    "200": {
                        "description": "Data exported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data exported successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "accounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Account"
                                                    }
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Category"
                                                    }
                                                },
                                                "transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Transaction"
                                                    }
                                                },
                                                "budgets": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Budget"
                                                    }
                                                },
                                                "settings": {
                                                    "type": "object"
                                                },
                                                "exported_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/delete-account": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "description": "Permanently delete user account and all associated data",
                "operationId": "deleteUserAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "confirmation": {
                                        "description": "Must be 'DELETE' to confirm",
                                        "type": "string",
                                        "example": "DELETE"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/notification-settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get notification settings",
                "description": "Get user notification preferences",
                "operationId": "getNotificationSettings",
                "responses": {
                    "200": {
                        "description": "Notification settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "budget_alerts": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "bill_reminders": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "goal_milestones": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "low_balance_alerts": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "transaction_notifications": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "email_notifications": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "push_notifications": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sms_notifications": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update notification settings",
                "description": "Update user notification preferences",
                "operationId": "updateNotificationSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "budget_alerts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bill_reminders": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "goal_milestones": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "low_balance_alerts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "transaction_notifications": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "email_notifications": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "push_notifications": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sms_notifications": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/security-info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get security information",
                "description": "Get user account security information",
                "operationId": "getSecurityInfo",
                "responses": {
                    "200": {
                        "description": "Security info retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "email_verified": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "last_login_ip": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "active_sessions": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "two_factor_enabled": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "backup_codes_generated": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/sessions/{token_id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Revoke session",
                "description": "Revoke a specific session/token",
                "operationId": "revokeToken",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "description": "Token ID to revoke",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Session revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot revoke current session"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/active-sessions": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get active sessions",
                "description": "Get all active user sessions/tokens",
                "operationId": "getActiveSessions",
                "responses": {
                    "200": {
                        "description": "Active sessions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "auth_token"
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "is_current": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account",
                "description": "Financial account model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "type",
                    "balance",
                    "currency"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Savings Account"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "checking",
                            "savings",
                            "credit_card",
                            "investment",
                            "loan",
                            "cash",
                            "other"
                        ],
                        "example": "savings"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "currency": {
                        "type": "string",
                        "example": "PHP"
                    },
                    "institution": {
                        "type": "string",
                        "example": "BDO",
                        "nullable": true
                    },
                    "credit_limit": {
                        "type": "number",
                        "nullable": true
                    },
                    "account_number": {
                        "type": "string",
                        "example": "****1234",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Primary savings account for emergency fund",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "example": "#4CAF50",
                        "nullable": true
                    },
                    "icon": {
                        "type": "string",
                        "example": "bank",
                        "nullable": true
                    },
                    "include_in_net_worth": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_included_in_totals": {
                        "type": "boolean",
                        "example": true
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DashboardStats": {
                "properties": {
                    "total_balance": {
                        "type": "number",
                        "example": 150000
                    },
                    "total_income": {
                        "type": "number",
                        "example": 50000
                    },
                    "total_expenses": {
                        "type": "number",
                        "example": 35000
                    },
                    "net_worth": {
                        "type": "number",
                        "example": 150000
                    },
                    "monthly_average_income": {
                        "type": "number",
                        "example": 50000
                    },
                    "monthly_average_expense": {
                        "type": "number",
                        "example": 35000
                    },
                    "savings_rate": {
                        "type": "number",
                        "example": 30
                    },
                    "accounts_summary": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "savings"
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "total": {
                                    "type": "number",
                                    "example": 100000
                                }
                            },
                            "type": "object"
                        }
                    },
                    "recent_transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    },
                    "budget_status": {
                        "properties": {
                            "total_budgets": {
                                "type": "integer",
                                "example": 5
                            },
                            "over_budget": {
                                "type": "integer",
                                "example": 1
                            },
                            "on_track": {
                                "type": "integer",
                                "example": 3
                            },
                            "under_budget": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SpendingAnalysis": {
                "properties": {
                    "period": {
                        "type": "string",
                        "example": "2025-01"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "category_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "category_name": {
                                    "type": "string",
                                    "example": "Food & Dining"
                                },
                                "total_spent": {
                                    "type": "number",
                                    "example": 15000
                                },
                                "percentage": {
                                    "type": "number",
                                    "example": 42.86
                                },
                                "transaction_count": {
                                    "type": "integer",
                                    "example": 25
                                },
                                "average_transaction": {
                                    "type": "number",
                                    "example": 600
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total_spent": {
                        "type": "number",
                        "example": 35000
                    },
                    "top_merchants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "SM Supermarket"
                                },
                                "amount": {
                                    "type": "number",
                                    "example": 5000
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 4
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Budget": {
                "title": "Budget",
                "description": "Budget model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "amount",
                    "period",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Monthly Food Budget"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 10000
                    },
                    "period": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly",
                            "yearly",
                            "custom"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-31"
                    },
                    "spent_amount": {
                        "description": "Amount spent so far",
                        "type": "number",
                        "format": "float",
                        "example": 4500
                    },
                    "remaining_amount": {
                        "description": "Remaining budget",
                        "type": "number",
                        "format": "float",
                        "example": 5500
                    },
                    "rollover": {
                        "description": "Rollover unused amount to next period",
                        "type": "boolean",
                        "example": false
                    },
                    "alert_threshold": {
                        "description": "Alert when X% of budget is reached",
                        "type": "integer",
                        "example": 80,
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Transaction category model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "parent_id": {
                        "description": "Parent category ID for subcategories",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Food & Dining"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "both"
                        ],
                        "example": "expense"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF5722"
                    },
                    "icon": {
                        "type": "string",
                        "example": "restaurant"
                    },
                    "description": {
                        "type": "string",
                        "example": "All food-related expenses",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_system": {
                        "description": "System-defined category",
                        "type": "boolean",
                        "example": false
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "remember": {
                        "description": "Remember me token",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "currency": {
                        "description": "Default currency",
                        "type": "string",
                        "example": "PHP"
                    },
                    "timezone": {
                        "description": "User timezone",
                        "type": "string",
                        "example": "Asia/Manila"
                    },
                    "language": {
                        "description": "Preferred language",
                        "type": "string",
                        "example": "en"
                    }
                },
                "type": "object"
            },
            "CreateTransactionRequest": {
                "required": [
                    "account_id",
                    "category_id",
                    "amount",
                    "type",
                    "date",
                    "description"
                ],
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "description": {
                        "type": "string",
                        "example": "Grocery shopping"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Weekly groceries",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "groceries",
                            "food"
                        ]
                    },
                    "transfer_account_id": {
                        "description": "Required for transfer type",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateTransactionRequest": {
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "description": {
                        "type": "string",
                        "example": "Grocery shopping"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Weekly groceries",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "groceries",
                            "food"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateBudgetRequest": {
                "required": [
                    "name",
                    "amount",
                    "period",
                    "start_date"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Monthly Food Budget"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 10000
                    },
                    "period": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly",
                            "yearly",
                            "custom"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-31",
                        "nullable": true
                    },
                    "rollover": {
                        "type": "boolean",
                        "example": false
                    },
                    "alert_threshold": {
                        "type": "integer",
                        "example": 80
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    },
                    "error": {
                        "type": "string",
                        "example": "Error details"
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "field_name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {}
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource?page=10"
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 10
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 150
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UnauthorizedResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "title": "Transaction",
                "description": "Financial transaction model",
                "required": [
                    "id",
                    "user_id",
                    "account_id",
                    "category_id",
                    "amount",
                    "type",
                    "date",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "account_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "description": {
                        "type": "string",
                        "example": "Grocery shopping at SM Supermarket"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Weekly groceries",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "groceries",
                            "food",
                            "essentials"
                        ]
                    },
                    "reference_number": {
                        "type": "string",
                        "example": "REF-2025-001",
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "example": "SM North EDSA",
                        "nullable": true
                    },
                    "receipt_url": {
                        "type": "string",
                        "example": "receipts/2025/01/receipt1.jpg",
                        "nullable": true
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "example": false
                    },
                    "recurring_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "transfer_account_id": {
                        "description": "For transfer transactions",
                        "type": "integer",
                        "nullable": true
                    },
                    "is_cleared": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "example": "avatars/user1.jpg",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "example": "+639123456789",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15",
                        "nullable": true
                    },
                    "currency": {
                        "description": "3-letter currency code",
                        "type": "string",
                        "example": "PHP"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "Asia/Manila"
                    },
                    "language": {
                        "type": "string",
                        "example": "en"
                    },
                    "preferences": {
                        "properties": {
                            "theme": {
                                "type": "string",
                                "example": "dark"
                            },
                            "notifications": {
                                "type": "boolean",
                                "example": true
                            },
                            "email_alerts": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "192.168.1.1",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T08:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T08:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication endpoints"
        },
        {
            "name": "Users",
            "description": "User management endpoints"
        },
        {
            "name": "Accounts",
            "description": "Account management endpoints"
        },
        {
            "name": "System",
            "description": "System"
        }
    ]
}