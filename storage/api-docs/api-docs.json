{
    "openapi": "3.0.0",
    "info": {
        "title": "Budget App API",
        "description": "API documentation for Budget Management Application",
        "contact": {
            "email": "admin@budgetapp.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api": {},
        "/api/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all accounts",
                "description": "Get all user accounts with optional filtering",
                "operationId": "getAccounts",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by account type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cash",
                                "bank",
                                "credit_card",
                                "investment",
                                "ewallet"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "description": "Include inactive accounts",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 45000
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Create new account",
                "description": "Create a new financial account",
                "operationId": "createAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "balance"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Main Bank Account"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "cash",
                                            "bank",
                                            "credit_card",
                                            "investment",
                                            "ewallet"
                                        ],
                                        "example": "bank"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "example": 1000.5
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#2196F3"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "account_balance"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "My primary savings account"
                                    },
                                    "account_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "institution": {
                                        "type": "string",
                                        "example": "BDO"
                                    },
                                    "credit_limit": {
                                        "description": "For credit cards only",
                                        "type": "number",
                                        "example": 50000
                                    },
                                    "include_in_net_worth": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account details",
                "description": "Get specific account details with statistics",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Account"
                                                },
                                                {
                                                    "properties": {
                                                        "statistics": {
                                                            "properties": {
                                                                "total_income": {
                                                                    "type": "number",
                                                                    "example": 10000
                                                                },
                                                                "total_expenses": {
                                                                    "type": "number",
                                                                    "example": 8000
                                                                },
                                                                "transaction_count": {
                                                                    "type": "integer",
                                                                    "example": 150
                                                                },
                                                                "average_transaction": {
                                                                    "type": "number",
                                                                    "example": 133.33
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account",
                "description": "Update account information",
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Account Name"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "example": 2000
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#4CAF50"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "account_balance_wallet"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "credit_limit": {
                                        "type": "number",
                                        "example": 75000
                                    },
                                    "include_in_net_worth": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete account",
                "description": "Delete an account",
                "operationId": "deleteAccount",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete account"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/transactions": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account transactions",
                "description": "Get transactions for a specific account",
                "operationId": "getAccountTransactions",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Transaction type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense",
                                "transfer"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/balance-history": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get balance history",
                "description": "Get account balance history over time",
                "operationId": "getAccountBalanceHistory",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Period",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "balance": {
                                                        "type": "number"
                                                    },
                                                    "change_amount": {
                                                        "type": "number"
                                                    },
                                                    "change_type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/transfer": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Transfer between accounts",
                "description": "Transfer money between two accounts",
                "operationId": "transferBetweenAccounts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_account_id",
                                    "to_account_id",
                                    "amount"
                                ],
                                "properties": {
                                    "from_account_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "to_account_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "amount": {
                                        "type": "number",
                                        "example": 500
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Transfer to savings"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Monthly savings transfer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transfer completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "transfer_id": {
                                                    "type": "integer"
                                                },
                                                "from_transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "to_transaction": {
                                                    "$ref": "#/components/schemas/Transaction"
                                                },
                                                "from_account_balance": {
                                                    "type": "number"
                                                },
                                                "to_account_balance": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/adjust-balance": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Adjust account balance",
                "description": "Manually adjust account balance to match actual balance",
                "operationId": "adjustAccountBalance",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "balance",
                                    "reason"
                                ],
                                "properties": {
                                    "balance": {
                                        "type": "number",
                                        "example": 5000
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Monthly reconciliation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Balance adjusted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account balance adjusted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/types": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account types",
                "description": "Get available account types and their configurations",
                "operationId": "getAccountTypes",
                "responses": {
                    "200": {
                        "description": "Account types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "icon": {
                                                        "type": "string"
                                                    },
                                                    "color": {
                                                        "type": "string"
                                                    },
                                                    "supports_credit_limit": {
                                                        "type": "boolean"
                                                    },
                                                    "default_include_in_net_worth": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/summary": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get accounts summary",
                "description": "Get summary statistics of all accounts",
                "operationId": "getAccountsSummary",
                "responses": {
                    "200": {
                        "description": "Summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_accounts": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 45000
                                                },
                                                "total_assets": {
                                                    "type": "number",
                                                    "example": 55000
                                                },
                                                "total_liabilities": {
                                                    "type": "number",
                                                    "example": 10000
                                                },
                                                "accounts_by_type": {
                                                    "type": "object"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/performance-metrics": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get performance metrics",
                "description": "Get account performance metrics over time",
                "operationId": "getAccountPerformanceMetrics",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "months",
                        "in": "query",
                        "description": "Number of months to analyze (1-24)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "monthly_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "string"
                                                            },
                                                            "income": {
                                                                "type": "number"
                                                            },
                                                            "expenses": {
                                                                "type": "number"
                                                            },
                                                            "net": {
                                                                "type": "number"
                                                            },
                                                            "transaction_count": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "average_income": {
                                                    "type": "number"
                                                },
                                                "average_expenses": {
                                                    "type": "number"
                                                },
                                                "average_net": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/{account}/sync-balance": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Sync account balance",
                "description": "Synchronize account balance with actual balance",
                "operationId": "syncAccountBalance",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "actual_balance"
                                ],
                                "properties": {
                                    "actual_balance": {
                                        "type": "number",
                                        "example": 10000
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Bank statement reconciliation"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Balance synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account balance synced successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "old_balance": {
                                                    "type": "number"
                                                },
                                                "new_balance": {
                                                    "type": "number"
                                                },
                                                "difference": {
                                                    "type": "number"
                                                },
                                                "account": {
                                                    "$ref": "#/components/schemas/Account"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Account not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/accounts/bulk/update": {
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Bulk update accounts",
                "description": "Update multiple accounts at once",
                "operationId": "bulkUpdateAccounts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accounts"
                                ],
                                "properties": {
                                    "accounts": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Name"
                                                },
                                                "color": {
                                                    "type": "string",
                                                    "example": "#FF0000"
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "account_balance"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "include_in_net_worth": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Accounts updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Accounts updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "currency": {
                                        "description": "Default currency",
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "timezone": {
                                        "description": "User timezone",
                                        "type": "string",
                                        "example": "Asia/Manila"
                                    },
                                    "language": {
                                        "description": "Preferred language",
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdefghijklmnop"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and receive token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "description": "Remember me",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "2|xyzabcdefghijk"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke current user token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/logout-all": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout from all devices",
                "description": "Revoke all user tokens",
                "operationId": "logoutAll",
                "responses": {
                    "200": {
                        "description": "Logged out from all devices successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out from all devices successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get current authenticated user details",
                "operationId": "getAuthUser",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "description": "Revoke current token and issue a new one",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "3|newtoken123456"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link to user's email",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "We can't find a user with that email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-here"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "This password reset token is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "description": "Change authenticated user's password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentPassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Verify user's email address using token",
                "operationId": "verifyEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "verification-token-here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification",
                "description": "Resend verification email to user",
                "operationId": "resendVerification",
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get list of bills",
                "description": "Get all user bills with filtering and pagination",
                "operationId": "e049f711bebde336193ecbd1cbb7d993",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "paid",
                                "overdue",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "description": "Filter by frequency",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "monthly",
                                "weekly",
                                "quarterly",
                                "annually"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "amount",
                                "due_date",
                                "status"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bills retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BillResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bills"
                ],
                "summary": "Create a new bill",
                "description": "Create a new bill",
                "operationId": "aa6d8159ba951369b80cf4d40d5254f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "amount",
                                    "due_date",
                                    "frequency",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "weekly",
                                            "quarterly",
                                            "annually"
                                        ]
                                    },
                                    "reminder_days": {
                                        "type": "integer",
                                        "default": 3
                                    },
                                    "is_recurring": {
                                        "type": "boolean",
                                        "default": true
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bill created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/{id}": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get a specific bill",
                "description": "Get a specific bill",
                "operationId": "4f2af7e00bd4ea08b689fda375bab2d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bill not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bills"
                ],
                "summary": "Update a bill",
                "description": "Update a bill",
                "operationId": "92701970b87ceeeddd7cc5655140b577",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBillRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bill updated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bills"
                ],
                "summary": "Delete a bill",
                "description": "Delete a bill",
                "operationId": "1d3fab5897de74e91fb1063013e00f65",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill deleted successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/{id}/pay": {
            "post": {
                "tags": [
                    "Bills"
                ],
                "summary": "Mark a bill as paid",
                "description": "Mark a bill as paid",
                "operationId": "f8450a6fa8820678ff5039dbf44d9046",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "payment_date"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "create_transaction": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bill marked as paid successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/status/upcoming": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get upcoming bills",
                "description": "Get upcoming bills",
                "operationId": "8841ceee9bddb267dab5ceea930e2c8e",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to look ahead",
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upcoming bills retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/status/overdue": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get overdue bills",
                "description": "Get overdue bills",
                "operationId": "e9cc7ef2e0bd9befc8d84614e93478e7",
                "responses": {
                    "200": {
                        "description": "Overdue bills retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/{id}/payment-history": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get payment history for a bill",
                "description": "Get bill payment history",
                "operationId": "6aff8c6c8e07b1b84c952f0771e7d612",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for history",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for history",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit number of results",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total_payments": {
                                                    "type": "integer"
                                                },
                                                "total_amount_paid": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/analytics/statistics": {
            "get": {
                "tags": [
                    "Bills"
                ],
                "summary": "Get bill statistics",
                "description": "Get bill statistics",
                "operationId": "e8bb450ac8dece0b5592c2a18a4a0d08",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Statistics period",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill statistics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bills/{id}/duplicate": {
            "post": {
                "tags": [
                    "Bills"
                ],
                "summary": "Duplicate a bill",
                "description": "Duplicate a bill for creating similar ones",
                "operationId": "ad4aa6b0ea5605d61c5f006ed6773ea2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bill duplicated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/budgets": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Get all user budgets with filtering",
                "description": "Get all user budgets with filtering",
                "operationId": "getBudgets",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "weekly",
                                "monthly",
                                "yearly"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "amount",
                                "spent",
                                "start_date",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Budget"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active_count": {
                                                    "type": "integer"
                                                },
                                                "inactive_count": {
                                                    "type": "integer"
                                                },
                                                "total_budgeted": {
                                                    "type": "number"
                                                },
                                                "total_spent": {
                                                    "type": "number"
                                                },
                                                "by_period": {
                                                    "type": "object"
                                                },
                                                "statistics": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Create a new budget",
                "description": "Create a new budget",
                "operationId": "createBudget",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBudgetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Budget created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Budget"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budgets/{id}": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Get specific budget with analysis",
                "description": "Get specific budget with analysis",
                "operationId": "getBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/Budget"
                                                },
                                                {
                                                    "properties": {
                                                        "analysis": {
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Budget not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Update budget",
                "description": "Update budget",
                "operationId": "updateBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBudgetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Budget updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Budget"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Budget not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Delete budget",
                "description": "Delete budget",
                "operationId": "deleteBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Budget not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budgets/current/month": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Get current month budgets with spending",
                "description": "Get current month budgets",
                "operationId": "getCurrentMonthBudgets",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current month budgets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Budget"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total_budgeted": {
                                                    "type": "number"
                                                },
                                                "total_spent": {
                                                    "type": "number"
                                                },
                                                "remaining": {
                                                    "type": "number"
                                                },
                                                "percentage_used": {
                                                    "type": "number"
                                                },
                                                "budgets_count": {
                                                    "type": "integer"
                                                },
                                                "over_budget_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budgets/{id}/analysis": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Get budget analysis",
                "description": "Get budget analysis",
                "operationId": "getBudgetAnalysis",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "current",
                                "previous",
                                "comparison"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget analysis data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Budget not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budgets/{id}/reset": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Reset budget for new period",
                "description": "Reset budget for new period",
                "operationId": "resetBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "carry_over_unused": {
                                        "type": "boolean"
                                    },
                                    "reset_spent": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Budget reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Budget"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Budget not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all user categories",
                "description": "Get all user categories",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense",
                                "transfer"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "sort_order",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "by_type": {
                                                    "type": "object"
                                                },
                                                "active_count": {
                                                    "type": "integer"
                                                },
                                                "inactive_count": {
                                                    "type": "integer"
                                                },
                                                "statistics": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get specific category",
                "description": "Get specific category",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "description": "Delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete category"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}/transactions": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category transactions",
                "description": "Get category transactions",
                "operationId": "getCategoryTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense",
                                "transfer"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/analytics/spending-analysis": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get spending analysis by category",
                "description": "Get spending analysis by category",
                "operationId": "getCategorySpendingAnalysis",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending analysis data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/analytics/trends": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category trends",
                "description": "Get category trends",
                "operationId": "getCategoryTrends",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "months",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 24,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "category_ids[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category trends data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/bulk/update": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Bulk update categories",
                "description": "Bulk update categories",
                "operationId": "bulkUpdateCategories",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "color": {
                                                    "type": "string"
                                                },
                                                "icon": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "sort_order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categories updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/bulk/reorder": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Reorder categories",
                "description": "Reorder categories",
                "operationId": "reorderCategories",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "sort_order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categories reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/meta/icons-and-colors": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get available icons and colors",
                "description": "Get category icons and colors",
                "operationId": "getCategoryIconsAndColors",
                "responses": {
                    "200": {
                        "description": "Available icons and colors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "icons": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "colors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/merge": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Merge categories",
                "description": "Merge categories",
                "operationId": "mergeCategories",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "source_category_id": {
                                        "type": "integer"
                                    },
                                    "target_category_id": {
                                        "type": "integer"
                                    },
                                    "delete_source": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categories merged successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/meta/defaults": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get default categories for new users",
                "description": "Get default categories for new users",
                "operationId": "getDefaultCategories",
                "responses": {
                    "200": {
                        "description": "Default categories list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/meta/create-defaults": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create default categories for user",
                "description": "Create default categories for user",
                "operationId": "createDefaultCategories",
                "responses": {
                    "201": {
                        "description": "Default categories created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User already has categories"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/debts": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get list of debts",
                "description": "Get all user debts with filtering and pagination",
                "operationId": "db02cf9efab46d2448020de570b6b6b3",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by debt type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "paid_off",
                                "closed"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "current_balance",
                                "interest_rate",
                                "minimum_payment",
                                "due_date"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DebtResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Debts"
                ],
                "summary": "Create a new debt",
                "description": "Create a new debt",
                "operationId": "500be8eb81582c5ff82fa5991dd6a9ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "original_balance",
                                    "current_balance",
                                    "interest_rate",
                                    "minimum_payment",
                                    "due_date",
                                    "payment_frequency"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "personal_loan",
                                            "mortgage",
                                            "auto_loan",
                                            "student_loan"
                                        ]
                                    },
                                    "original_balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "current_balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "interest_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "minimum_payment": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "payment_frequency": {
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "weekly",
                                            "bi-weekly"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "default": "active",
                                        "enum": [
                                            "active",
                                            "paid_off",
                                            "closed"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Debt created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DebtResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/{id}": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get a specific debt",
                "description": "Get a specific debt",
                "operationId": "54e929e2f8c9527dd45a75fddf38a2c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debt retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DebtResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Debt not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Debts"
                ],
                "summary": "Update a debt",
                "description": "Update a debt",
                "operationId": "41869a7678b3b2bbd2c866142e9c5493",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDebtRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Debt updated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Debts"
                ],
                "summary": "Delete a debt",
                "description": "Delete a debt",
                "operationId": "f84f16bf8eaf35bced9b27b1c18232d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debt deleted successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/{id}/payment": {
            "post": {
                "tags": [
                    "Debts"
                ],
                "summary": "Record a debt payment",
                "description": "Record a debt payment",
                "operationId": "f63a92d47140b4b6754961b66ee78a85",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "payment_date"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment recorded successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/{id}/payoff-schedule": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get payoff schedule for a debt",
                "description": "Get debt payoff schedule",
                "operationId": "9450816166dba7c5225df5d82b4d6169",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "extra_payment",
                        "in": "query",
                        "description": "Extra payment amount",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payoff schedule retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/summary": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get debts summary statistics",
                "description": "Get debt summary statistics",
                "operationId": "8733fe2905bb7a214102e052b90f1acd",
                "responses": {
                    "200": {
                        "description": "Debts summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_debt": {
                                                    "type": "number"
                                                },
                                                "monthly_payments": {
                                                    "type": "number"
                                                },
                                                "average_interest_rate": {
                                                    "type": "number"
                                                },
                                                "debts_by_type": {
                                                    "type": "object"
                                                },
                                                "active_debts_count": {
                                                    "type": "integer"
                                                },
                                                "paid_off_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/{id}/payment-history": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get payment history for a debt",
                "description": "Get payment history for a debt",
                "operationId": "06632144802cb0f58ac1025eb9783bd6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment history retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/{id}/mark-paid-off": {
            "post": {
                "tags": [
                    "Debts"
                ],
                "summary": "Mark a debt as paid off",
                "description": "Mark debt as paid off",
                "operationId": "020cce1e8fe434d1793eaebc7e7f3e75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Debt ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Debt marked as paid off successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/types": {
            "get": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get available debt types",
                "description": "Get debt types with their configurations",
                "operationId": "4b9adcd5821a55db135f3e3d0391393e",
                "responses": {
                    "200": {
                        "description": "Debt types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "credit_card",
                                                    "personal_loan",
                                                    "mortgage",
                                                    "auto_loan",
                                                    "student_loan",
                                                    "other"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/debts/consolidation-options": {
            "post": {
                "tags": [
                    "Debts"
                ],
                "summary": "Get debt consolidation options",
                "description": "Calculate debt consolidation options",
                "operationId": "1150b6f0225449a35362eb60d4e804b8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "debt_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "consolidation_rate": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consolidation options calculated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/goals": {
            "get": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Get list of financial goals",
                "description": "Get all financial goals",
                "operationId": "5ec294882c5155834d15b3d90ccd4603",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (active, completed, paused, cancelled)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "paused",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority (high, medium, low)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "high",
                                "medium",
                                "low"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "target_amount",
                                "current_amount",
                                "target_date",
                                "priority",
                                "created_at",
                                "progress_percentage"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of financial goals retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FinancialGoalResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active_goals": {
                                                    "type": "integer"
                                                },
                                                "completed_goals": {
                                                    "type": "integer"
                                                },
                                                "total_target_amount": {
                                                    "type": "number"
                                                },
                                                "total_current_amount": {
                                                    "type": "number"
                                                },
                                                "overall_progress": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "currency_symbol": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Create a new financial goal",
                "description": "Create new financial goal",
                "operationId": "2d36262d3814a04130a4807b6d25efc8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "target_amount",
                                    "target_date",
                                    "priority"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "target_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    },
                                    "current_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "default": 0,
                                        "minimum": 0
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "high",
                                            "medium",
                                            "low"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "default": "active",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "paused",
                                            "cancelled"
                                        ]
                                    },
                                    "color": {
                                        "type": "string",
                                        "default": "#2196F3"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "default": "flag"
                                    },
                                    "monthly_target": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "milestone_settings": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Financial goal created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FinancialGoalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/goals/{id}": {
            "get": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Get a specific financial goal",
                "description": "Get specific financial goal",
                "operationId": "10aa64bb2d335bcd8cbfa6652ed8f119",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Financial goal retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FinancialGoalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Goal not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Update a financial goal",
                "description": "Update financial goal",
                "operationId": "4bf7e3fd936387abd583f773f49e370b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "target_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    },
                                    "current_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0
                                    },
                                    "target_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "high",
                                            "medium",
                                            "low"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "paused",
                                            "cancelled"
                                        ]
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    },
                                    "monthly_target": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "milestone_settings": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Financial goal updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FinancialGoalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Delete a financial goal",
                "description": "Delete financial goal",
                "operationId": "4d012534376eff48e3cd298e7f09007f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Financial goal deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_goal_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/goals/{id}/contribute": {
            "post": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Add contribution to a financial goal",
                "description": "Add money to goal (contribute)",
                "operationId": "359bca705d82b4b6e74c27d7c98650bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0.01
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "transaction_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contribution added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FinancialGoalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/goals/{id}/progress": {
            "get": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Get detailed progress of a financial goal",
                "description": "Get goal progress details",
                "operationId": "b7e06c9a14891bc65a3494f0606dffb6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal progress retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "goal": {
                                                    "$ref": "#/components/schemas/FinancialGoalResource"
                                                },
                                                "progress": {
                                                    "type": "object"
                                                },
                                                "projections": {
                                                    "type": "object"
                                                },
                                                "milestones": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/goals/{id}/complete": {
            "post": {
                "tags": [
                    "Financial Goals"
                ],
                "summary": "Mark a financial goal as completed",
                "description": "Mark goal as completed",
                "operationId": "d06521e1e0e959b0d3dd232c0b189359",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Financial goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal marked as completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FinancialGoalResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Goal already completed"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "description": "Check if API is running",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "example": "2025-01-15T10:00:00Z"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all user transactions with filtering and pagination",
                "description": "Get all user transactions with filtering and pagination",
                "operationId": "getTransactions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "account_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense",
                                "transfer"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "is_cleared",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_recurring",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "date",
                                "amount",
                                "description",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction",
                "description": "Create a new transaction",
                "operationId": "createTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get specific transaction details",
                "description": "Get specific transaction",
                "operationId": "getTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update transaction",
                "description": "Update transaction",
                "operationId": "updateTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TransactionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete transaction",
                "description": "Delete transaction",
                "operationId": "deleteTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/bulk": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Bulk create transactions",
                "description": "Bulk create transactions",
                "operationId": "bulkCreateTransactions",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transactions": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/CreateTransactionRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transactions created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "created_count": {
                                                    "type": "integer"
                                                },
                                                "transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TransactionResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Bulk delete transactions",
                "description": "Bulk delete transactions",
                "operationId": "bulkDeleteTransactions",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transactions deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/search/query": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Search transactions",
                "description": "Search transactions",
                "operationId": "searchTransactions",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/import/csv": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Import transactions from CSV file",
                "description": "Import transactions from CSV",
                "operationId": "importTransactions",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "skip_duplicates": {
                                        "type": "boolean"
                                    },
                                    "date_format": {
                                        "type": "string",
                                        "default": "Y-m-d"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Import results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "imported": {
                                                    "type": "integer"
                                                },
                                                "skipped": {
                                                    "type": "integer"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/export/data": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Export transactions to CSV",
                "description": "Export transactions to CSV",
                "operationId": "exportTransactions",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "csv",
                            "enum": [
                                "csv",
                                "xlsx"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export file",
                        "content": {
                            "text/csv": {},
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/statistics/summary": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction statistics",
                "description": "Get transaction statistics",
                "operationId": "getTransactionStatistics",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "week",
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_income": {
                                                    "type": "number"
                                                },
                                                "total_expenses": {
                                                    "type": "number"
                                                },
                                                "net_income": {
                                                    "type": "number"
                                                },
                                                "transaction_count": {
                                                    "type": "integer"
                                                },
                                                "average_transaction": {
                                                    "type": "number"
                                                },
                                                "largest_expense": {
                                                    "type": "number"
                                                },
                                                "largest_income": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/recent/list": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get recent transactions",
                "description": "Get recent transactions",
                "operationId": "getRecentTransactions",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "description": "Get current authenticated user profile",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "description": "Update authenticated user profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+639123456789"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "Asia/Manila"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user password",
                "description": "Change authenticated user's password",
                "operationId": "updateUserPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentPass123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPass123!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPass123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/avatar": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Upload avatar",
                "description": "Upload or update user avatar image",
                "operationId": "uploadAvatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "avatar"
                                ],
                                "properties": {
                                    "avatar": {
                                        "description": "Avatar image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "avatar_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/avatars/user1.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete avatar",
                "description": "Remove user avatar image",
                "operationId": "deleteAvatar",
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/preferences": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user preferences",
                "description": "Get user preferences and settings",
                "operationId": "getUserPreferences",
                "responses": {
                    "200": {
                        "description": "Preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "currency": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                },
                                                "timezone": {
                                                    "type": "string",
                                                    "example": "Asia/Manila"
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "preferences": {
                                                    "type": "object"
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user preferences",
                "description": "Update user preferences and settings",
                "operationId": "updateUserPreferences",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "America/New_York"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "preferences": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user settings",
                "description": "Get all user settings",
                "operationId": "getUserSettings",
                "responses": {
                    "200": {
                        "description": "Settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user settings",
                "description": "Update user settings",
                "operationId": "updateUserSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "settings"
                                ],
                                "properties": {
                                    "settings": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/dashboard-stats": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get dashboard statistics",
                "description": "Get user dashboard statistics and metrics",
                "operationId": "getDashboardStats",
                "responses": {
                    "200": {
                        "description": "Dashboard stats retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "net_worth": {
                                                    "type": "number",
                                                    "example": 50000
                                                },
                                                "total_accounts": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_categories": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "current_month_income": {
                                                    "type": "number",
                                                    "example": 5000
                                                },
                                                "current_month_expenses": {
                                                    "type": "number",
                                                    "example": 3000
                                                },
                                                "total_transactions": {
                                                    "type": "integer",
                                                    "example": 250
                                                },
                                                "active_budgets": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "active_goals": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "active_debts": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "upcoming_bills": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "unread_notifications": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "currency_symbol": {
                                                    "type": "string",
                                                    "example": "â‚±"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/activity-summary": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get activity summary",
                "description": "Get user activity summary for specified period",
                "operationId": "getActivitySummary",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to include (default: 30)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "transactions_count": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "recent_transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Groceries"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "example": 150.5
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "expense"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2024-01-15"
                                                            },
                                                            "account": {
                                                                "type": "string",
                                                                "example": "Cash"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Food & Dining"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "budget_utilization": {
                                                    "type": "number",
                                                    "example": 75.5
                                                },
                                                "goals_progress": {
                                                    "type": "number",
                                                    "example": 60
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/account-summary": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get account summary",
                "description": "Get summary of all user accounts",
                "operationId": "getAccountSummary",
                "responses": {
                    "200": {
                        "description": "Account summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total_balance": {
                                                    "type": "number",
                                                    "example": 25000
                                                },
                                                "accounts_by_type": {
                                                    "type": "object"
                                                },
                                                "accounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Main Bank"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "bank"
                                                            },
                                                            "balance": {
                                                                "type": "number",
                                                                "example": 15000
                                                            },
                                                            "currency": {
                                                                "type": "string",
                                                                "example": "PHP"
                                                            },
                                                            "color": {
                                                                "type": "string",
                                                                "example": "#2196F3"
                                                            },
                                                            "icon": {
                                                                "type": "string",
                                                                "example": "account_balance"
                                                            },
                                                            "include_in_net_worth": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/export-data": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Export user data",
                "description": "Export all user data in JSON format",
                "operationId": "exportUserData",
                "responses": {
                    "200": {
                        "description": "Data exported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data exported successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "accounts": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Account"
                                                    }
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Category"
                                                    }
                                                },
                                                "transactions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Transaction"
                                                    }
                                                },
                                                "budgets": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Budget"
                                                    }
                                                },
                                                "settings": {
                                                    "type": "object"
                                                },
                                                "exported_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/delete-account": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "description": "Permanently delete user account and all associated data",
                "operationId": "deleteUserAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "confirmation": {
                                        "description": "Must be 'DELETE' to confirm",
                                        "type": "string",
                                        "example": "DELETE"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/notification-settings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get notification settings",
                "description": "Get user notification preferences",
                "operationId": "getNotificationSettings",
                "responses": {
                    "200": {
                        "description": "Notification settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "budget_alerts": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "bill_reminders": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "goal_milestones": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "low_balance_alerts": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "transaction_notifications": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "email_notifications": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "push_notifications": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sms_notifications": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update notification settings",
                "description": "Update user notification preferences",
                "operationId": "updateNotificationSettings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "budget_alerts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bill_reminders": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "goal_milestones": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "low_balance_alerts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "transaction_notifications": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "email_notifications": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "push_notifications": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sms_notifications": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification settings updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/security-info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get security information",
                "description": "Get user account security information",
                "operationId": "getSecurityInfo",
                "responses": {
                    "200": {
                        "description": "Security info retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "email_verified": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "last_login_ip": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "active_sessions": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "two_factor_enabled": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "backup_codes_generated": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/sessions/{token_id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Revoke session",
                "description": "Revoke a specific session/token",
                "operationId": "revokeToken",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "path",
                        "description": "Token ID to revoke",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Session revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot revoke current session"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/active-sessions": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get active sessions",
                "description": "Get all active user sessions/tokens",
                "operationId": "getActiveSessions",
                "responses": {
                    "200": {
                        "description": "Active sessions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "auth_token"
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "is_current": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "title": "Account",
                "description": "Financial account model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "type",
                    "balance",
                    "currency"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Main Savings Account"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "checking",
                            "savings",
                            "credit_card",
                            "investment",
                            "loan",
                            "cash",
                            "other"
                        ],
                        "example": "savings"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "currency": {
                        "type": "string",
                        "example": "PHP"
                    },
                    "institution": {
                        "type": "string",
                        "example": "BDO",
                        "nullable": true
                    },
                    "credit_limit": {
                        "type": "number",
                        "nullable": true
                    },
                    "account_number": {
                        "type": "string",
                        "example": "****1234",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Primary savings account for emergency fund",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "example": "#4CAF50",
                        "nullable": true
                    },
                    "icon": {
                        "type": "string",
                        "example": "bank",
                        "nullable": true
                    },
                    "include_in_net_worth": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_included_in_totals": {
                        "type": "boolean",
                        "example": true
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DashboardStats": {
                "properties": {
                    "total_balance": {
                        "type": "number",
                        "example": 150000
                    },
                    "total_income": {
                        "type": "number",
                        "example": 50000
                    },
                    "total_expenses": {
                        "type": "number",
                        "example": 35000
                    },
                    "net_worth": {
                        "type": "number",
                        "example": 150000
                    },
                    "monthly_average_income": {
                        "type": "number",
                        "example": 50000
                    },
                    "monthly_average_expense": {
                        "type": "number",
                        "example": 35000
                    },
                    "savings_rate": {
                        "type": "number",
                        "example": 30
                    },
                    "accounts_summary": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "savings"
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "total": {
                                    "type": "number",
                                    "example": 100000
                                }
                            },
                            "type": "object"
                        }
                    },
                    "recent_transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    },
                    "budget_status": {
                        "properties": {
                            "total_budgets": {
                                "type": "integer",
                                "example": 5
                            },
                            "over_budget": {
                                "type": "integer",
                                "example": 1
                            },
                            "on_track": {
                                "type": "integer",
                                "example": 3
                            },
                            "under_budget": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SpendingAnalysis": {
                "properties": {
                    "period": {
                        "type": "string",
                        "example": "2025-01"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "category_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "category_name": {
                                    "type": "string",
                                    "example": "Food & Dining"
                                },
                                "total_spent": {
                                    "type": "number",
                                    "example": 15000
                                },
                                "percentage": {
                                    "type": "number",
                                    "example": 42.86
                                },
                                "transaction_count": {
                                    "type": "integer",
                                    "example": 25
                                },
                                "average_transaction": {
                                    "type": "number",
                                    "example": 600
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total_spent": {
                        "type": "number",
                        "example": 35000
                    },
                    "top_merchants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "SM Supermarket"
                                },
                                "amount": {
                                    "type": "number",
                                    "example": 5000
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 4
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "BillResource": {
                "title": "Bill Resource",
                "description": "Bill resource representation",
                "properties": {
                    "id": {
                        "description": "Bill ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "description": "Bill name",
                        "type": "string",
                        "example": "Netflix Subscription"
                    },
                    "amount": {
                        "description": "Bill amount",
                        "type": "number",
                        "format": "float",
                        "example": 15.99
                    },
                    "due_date": {
                        "description": "Bill due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-15"
                    },
                    "frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "bi-weekly",
                            "monthly",
                            "quarterly",
                            "semi-annually",
                            "annually"
                        ],
                        "example": "monthly"
                    },
                    "reminder_days": {
                        "description": "Days before due date to send reminder",
                        "type": "integer",
                        "example": 3
                    },
                    "status": {
                        "description": "Bill status",
                        "type": "string",
                        "enum": [
                            "active",
                            "paid",
                            "overdue",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "is_recurring": {
                        "description": "Whether the bill is recurring",
                        "type": "boolean",
                        "example": true
                    },
                    "color": {
                        "description": "Bill color for UI display",
                        "type": "string",
                        "example": "#2196F3"
                    },
                    "icon": {
                        "description": "Bill icon identifier",
                        "type": "string",
                        "example": "receipt"
                    },
                    "notes": {
                        "description": "Additional notes about the bill",
                        "type": "string",
                        "example": "Includes family plan with 4 screens",
                        "nullable": true
                    },
                    "payment_history": {
                        "description": "History of payments for this bill",
                        "type": "array",
                        "items": {
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2025-01-15"
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 15.99
                                },
                                "status": {
                                    "type": "string",
                                    "example": "paid"
                                },
                                "transaction_id": {
                                    "type": "integer",
                                    "example": 123,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    },
                    "next_due_date": {
                        "description": "Next calculated due date for recurring bills",
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-15"
                    },
                    "days_until_due": {
                        "description": "Number of days until the bill is due",
                        "type": "integer",
                        "example": 7
                    },
                    "is_overdue": {
                        "description": "Whether the bill is currently overdue",
                        "type": "boolean",
                        "example": false
                    },
                    "last_paid_date": {
                        "description": "Date when the bill was last paid",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15",
                        "nullable": true
                    },
                    "total_paid": {
                        "description": "Total amount paid for this bill historically",
                        "type": "number",
                        "format": "float",
                        "example": 159.9
                    },
                    "payment_count": {
                        "description": "Number of times this bill has been paid",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T12:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "CreateBillRequest": {
                "title": "Create Bill Request",
                "required": [
                    "name",
                    "amount",
                    "due_date",
                    "frequency",
                    "category_id"
                ],
                "properties": {
                    "name": {
                        "description": "Bill name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Netflix Subscription"
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "description": "Bill amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 15.99
                    },
                    "due_date": {
                        "description": "Bill due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-15"
                    },
                    "frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "bi-weekly",
                            "monthly",
                            "quarterly",
                            "semi-annually",
                            "annually"
                        ],
                        "example": "monthly"
                    },
                    "reminder_days": {
                        "description": "Days before due date to send reminder",
                        "type": "integer",
                        "default": 3,
                        "maximum": 30,
                        "minimum": 0,
                        "example": 3
                    },
                    "is_recurring": {
                        "description": "Whether the bill is recurring",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "color": {
                        "description": "Bill color for UI display",
                        "type": "string",
                        "default": "#2196F3",
                        "example": "#FF5722"
                    },
                    "icon": {
                        "description": "Bill icon identifier",
                        "type": "string",
                        "default": "receipt",
                        "example": "streaming"
                    },
                    "notes": {
                        "description": "Additional notes about the bill",
                        "type": "string",
                        "example": "Includes family plan with 4 screens",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateBillRequest": {
                "title": "Update Bill Request",
                "properties": {
                    "name": {
                        "description": "Bill name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Netflix Premium"
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "description": "Bill amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 19.99
                    },
                    "due_date": {
                        "description": "Bill due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-20"
                    },
                    "frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "bi-weekly",
                            "monthly",
                            "quarterly",
                            "semi-annually",
                            "annually"
                        ],
                        "example": "monthly"
                    },
                    "reminder_days": {
                        "description": "Days before due date to send reminder",
                        "type": "integer",
                        "maximum": 30,
                        "minimum": 0,
                        "example": 5
                    },
                    "status": {
                        "description": "Bill status",
                        "type": "string",
                        "enum": [
                            "active",
                            "paid",
                            "overdue",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "is_recurring": {
                        "description": "Whether the bill is recurring",
                        "type": "boolean",
                        "example": true
                    },
                    "color": {
                        "description": "Bill color for UI display",
                        "type": "string",
                        "example": "#4CAF50"
                    },
                    "icon": {
                        "description": "Bill icon identifier",
                        "type": "string",
                        "example": "entertainment"
                    },
                    "notes": {
                        "description": "Additional notes about the bill",
                        "type": "string",
                        "example": "Upgraded to premium plan",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MarkAsPaidRequest": {
                "title": "Mark Bill As Paid Request",
                "required": [
                    "amount",
                    "payment_date"
                ],
                "properties": {
                    "amount": {
                        "description": "Payment amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 15.99
                    },
                    "payment_date": {
                        "description": "Date of payment",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "notes": {
                        "description": "Payment notes",
                        "type": "string",
                        "example": "Paid via credit card",
                        "nullable": true
                    },
                    "create_transaction": {
                        "description": "Whether to create a transaction record",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object"
            },
            "BillCollection": {
                "title": "Bill Collection",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BillResource"
                        }
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 5
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 75
                            }
                        },
                        "type": "object"
                    },
                    "summary": {
                        "properties": {
                            "total_monthly": {
                                "type": "number",
                                "format": "float",
                                "example": 450.5
                            },
                            "total_upcoming": {
                                "type": "number",
                                "format": "float",
                                "example": 150
                            },
                            "total_overdue": {
                                "type": "number",
                                "format": "float",
                                "example": 45.99
                            },
                            "active_bills_count": {
                                "type": "integer",
                                "example": 8
                            },
                            "overdue_bills_count": {
                                "type": "integer",
                                "example": 2
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BillStatistics": {
                "title": "Bill Statistics",
                "properties": {
                    "period": {
                        "description": "Statistics period",
                        "type": "string",
                        "example": "month"
                    },
                    "total_bills": {
                        "description": "Total number of bills",
                        "type": "integer",
                        "example": 15
                    },
                    "total_amount": {
                        "description": "Total amount for all bills",
                        "type": "number",
                        "format": "float",
                        "example": 750.5
                    },
                    "paid_amount": {
                        "description": "Total paid amount",
                        "type": "number",
                        "format": "float",
                        "example": 500
                    },
                    "pending_amount": {
                        "description": "Total pending amount",
                        "type": "number",
                        "format": "float",
                        "example": 250.5
                    },
                    "overdue_amount": {
                        "description": "Total overdue amount",
                        "type": "number",
                        "format": "float",
                        "example": 45.99
                    },
                    "bills_by_status": {
                        "properties": {
                            "active": {
                                "type": "integer",
                                "example": 8
                            },
                            "paid": {
                                "type": "integer",
                                "example": 5
                            },
                            "overdue": {
                                "type": "integer",
                                "example": 2
                            },
                            "cancelled": {
                                "type": "integer",
                                "example": 0
                            }
                        },
                        "type": "object"
                    },
                    "bills_by_frequency": {
                        "properties": {
                            "monthly": {
                                "type": "integer",
                                "example": 10
                            },
                            "weekly": {
                                "type": "integer",
                                "example": 2
                            },
                            "quarterly": {
                                "type": "integer",
                                "example": 2
                            },
                            "annually": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "bills_by_category": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "category_id": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "category_name": {
                                    "type": "string",
                                    "example": "Entertainment"
                                },
                                "count": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "total_amount": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 45.97
                                }
                            },
                            "type": "object"
                        }
                    },
                    "average_bill_amount": {
                        "description": "Average bill amount",
                        "type": "number",
                        "format": "float",
                        "example": 50.03
                    },
                    "payment_completion_rate": {
                        "description": "Percentage of bills paid on time",
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                    }
                },
                "type": "object"
            },
            "BillPaymentHistory": {
                "title": "Bill Payment History",
                "properties": {
                    "payment_id": {
                        "description": "Payment ID",
                        "type": "integer",
                        "example": 1
                    },
                    "bill_id": {
                        "description": "Bill ID",
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "description": "Payment amount",
                        "type": "number",
                        "format": "float",
                        "example": 15.99
                    },
                    "payment_date": {
                        "description": "Date of payment",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "status": {
                        "description": "Payment status",
                        "type": "string",
                        "example": "completed"
                    },
                    "transaction_id": {
                        "description": "Associated transaction ID",
                        "type": "integer",
                        "example": 123,
                        "nullable": true
                    },
                    "notes": {
                        "description": "Payment notes",
                        "type": "string",
                        "example": "Paid via bank transfer",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Payment record creation time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Budget": {
                "title": "Budget",
                "description": "Budget model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "amount",
                    "period",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Monthly Food Budget"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 10000
                    },
                    "period": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly",
                            "yearly",
                            "custom"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-31"
                    },
                    "spent_amount": {
                        "description": "Amount spent so far",
                        "type": "number",
                        "format": "float",
                        "example": 4500
                    },
                    "remaining_amount": {
                        "description": "Remaining budget",
                        "type": "number",
                        "format": "float",
                        "example": 5500
                    },
                    "rollover": {
                        "description": "Rollover unused amount to next period",
                        "type": "boolean",
                        "example": false
                    },
                    "alert_threshold": {
                        "description": "Alert when X% of budget is reached",
                        "type": "integer",
                        "example": 80,
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CreateBudgetRequest": {
                "title": "Create Budget Request",
                "description": "Request body for creating a new budget",
                "required": [
                    "category_id",
                    "name",
                    "amount",
                    "period",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "category_id": {
                        "description": "ID of the category this budget belongs to",
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "description": "Name of the budget",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Monthly Groceries Budget"
                    },
                    "amount": {
                        "description": "Budget amount",
                        "type": "number",
                        "format": "float",
                        "maximum": 999999999.99,
                        "minimum": 0.01,
                        "example": 500
                    },
                    "period": {
                        "description": "Budget period type",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "yearly"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "description": "Budget start date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "description": "Budget end date (must be after start_date)",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31"
                    },
                    "is_active": {
                        "description": "Whether the budget is active",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "alert_threshold": {
                        "description": "Percentage threshold for budget alerts",
                        "type": "number",
                        "format": "float",
                        "maximum": 100,
                        "minimum": 0,
                        "example": 80
                    },
                    "alert_enabled": {
                        "description": "Whether alerts are enabled for this budget",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "rollover_settings": {
                        "description": "Settings for budget rollover",
                        "properties": {
                            "enabled": {
                                "description": "Whether rollover is enabled",
                                "type": "boolean",
                                "example": true
                            },
                            "carry_over_unused": {
                                "description": "Whether to carry over unused budget amount",
                                "type": "boolean",
                                "example": true
                            },
                            "reset_on_overspend": {
                                "description": "Whether to reset on overspend",
                                "type": "boolean",
                                "example": false
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateBudgetRequest": {
                "title": "Update Budget Request",
                "description": "Request body for updating an existing budget. All fields are optional.",
                "properties": {
                    "category_id": {
                        "description": "ID of the category this budget belongs to",
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "description": "Name of the budget",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated Monthly Groceries Budget"
                    },
                    "amount": {
                        "description": "Budget amount",
                        "type": "number",
                        "format": "float",
                        "maximum": 999999999.99,
                        "minimum": 0.01,
                        "example": 600
                    },
                    "period": {
                        "description": "Budget period type",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "yearly"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "description": "Budget start date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-01"
                    },
                    "end_date": {
                        "description": "Budget end date (must be after start_date)",
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-29"
                    },
                    "is_active": {
                        "description": "Whether the budget is active",
                        "type": "boolean",
                        "example": true
                    },
                    "alert_threshold": {
                        "description": "Percentage threshold for budget alerts",
                        "type": "number",
                        "format": "float",
                        "maximum": 100,
                        "minimum": 0,
                        "example": 75
                    },
                    "alert_enabled": {
                        "description": "Whether alerts are enabled for this budget",
                        "type": "boolean",
                        "example": true
                    },
                    "rollover_settings": {
                        "description": "Settings for budget rollover",
                        "properties": {
                            "enabled": {
                                "description": "Whether rollover is enabled",
                                "type": "boolean",
                                "example": true
                            },
                            "carry_over_unused": {
                                "description": "Whether to carry over unused budget amount",
                                "type": "boolean",
                                "example": false
                            },
                            "reset_on_overspend": {
                                "description": "Whether to reset on overspend",
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BudgetResource": {
                "title": "Budget Resource",
                "description": "Budget resource response",
                "properties": {
                    "id": {
                        "description": "Budget ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "description": "Budget name",
                        "type": "string",
                        "example": "Monthly Groceries Budget"
                    },
                    "amount": {
                        "description": "Budget amount",
                        "type": "number",
                        "format": "float",
                        "example": 500
                    },
                    "spent": {
                        "description": "Amount spent",
                        "type": "number",
                        "format": "float",
                        "example": 325.5
                    },
                    "remaining": {
                        "description": "Remaining budget amount",
                        "type": "number",
                        "format": "float",
                        "example": 174.5
                    },
                    "percentage_used": {
                        "description": "Percentage of budget used",
                        "type": "number",
                        "format": "float",
                        "example": 65.1
                    },
                    "period": {
                        "description": "Budget period",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "yearly"
                        ],
                        "example": "monthly"
                    },
                    "start_date": {
                        "description": "Budget start date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "description": "Budget end date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31"
                    },
                    "is_active": {
                        "description": "Whether budget is active",
                        "type": "boolean",
                        "example": true
                    },
                    "alert_threshold": {
                        "description": "Alert threshold percentage",
                        "type": "number",
                        "format": "float",
                        "example": 80
                    },
                    "alert_enabled": {
                        "description": "Whether alerts are enabled",
                        "type": "boolean",
                        "example": true
                    },
                    "rollover_settings": {
                        "description": "Rollover settings",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "carry_over_unused": {
                                "type": "boolean"
                            },
                            "reset_on_overspend": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "BudgetValidationError": {
                "title": "Budget Validation Error Response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Validation errors by field",
                        "properties": {
                            "category_id": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The selected category is invalid or does not belong to you."
                                }
                            },
                            "name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Budget name cannot exceed 255 characters."
                                }
                            },
                            "amount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Budget amount must be at least 0.01."
                                }
                            },
                            "period": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Budget period must be weekly, monthly, or yearly."
                                }
                            },
                            "start_date": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "A budget for this category already exists for the specified period."
                                }
                            },
                            "end_date": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "End date must be after the start date."
                                }
                            },
                            "alert_threshold": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Alert threshold cannot exceed 100%."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Transaction category model",
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "parent_id": {
                        "description": "Parent category ID for subcategories",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Food & Dining"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "both"
                        ],
                        "example": "expense"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF5722"
                    },
                    "icon": {
                        "type": "string",
                        "example": "restaurant"
                    },
                    "description": {
                        "type": "string",
                        "example": "All food-related expenses",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_system": {
                        "description": "System-defined category",
                        "type": "boolean",
                        "example": false
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CreateCategoryRequest": {
                "title": "Create Category Request",
                "description": "Request body for creating a new category",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Groceries"
                    },
                    "type": {
                        "description": "Category type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "color": {
                        "description": "Hex color code for the category",
                        "type": "string",
                        "pattern": "^#[a-fA-F0-9]{6}$",
                        "example": "#4CAF50"
                    },
                    "icon": {
                        "description": "Icon name for the category",
                        "type": "string",
                        "maxLength": 50,
                        "example": "shopping_cart"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "maxLength": 500,
                        "example": "Monthly grocery expenses"
                    },
                    "is_active": {
                        "description": "Whether the category is active",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "sort_order": {
                        "description": "Sort order for display",
                        "type": "integer",
                        "minimum": 0,
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "title": "Update Category Request",
                "description": "Request body for updating an existing category. All fields are optional.",
                "properties": {
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated Groceries"
                    },
                    "type": {
                        "description": "Category type (cannot be changed if category has transactions)",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "color": {
                        "description": "Hex color code for the category",
                        "type": "string",
                        "pattern": "^#[a-fA-F0-9]{6}$",
                        "example": "#2196F3"
                    },
                    "icon": {
                        "description": "Icon name for the category",
                        "type": "string",
                        "maxLength": 50,
                        "example": "local_grocery_store"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "maxLength": 500,
                        "example": "Updated monthly grocery expenses"
                    },
                    "is_active": {
                        "description": "Whether the category is active (cannot deactivate if has recent transactions)",
                        "type": "boolean",
                        "example": true
                    },
                    "sort_order": {
                        "description": "Sort order for display",
                        "type": "integer",
                        "minimum": 0,
                        "example": 2
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "Category Resource",
                "description": "Category resource response",
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Groceries"
                    },
                    "type": {
                        "description": "Category type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "type_label": {
                        "description": "Human-readable type label",
                        "type": "string",
                        "example": "Expense"
                    },
                    "color": {
                        "description": "Hex color code",
                        "type": "string",
                        "example": "#4CAF50"
                    },
                    "icon": {
                        "description": "Icon name",
                        "type": "string",
                        "example": "shopping_cart"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "example": "Monthly grocery expenses"
                    },
                    "is_active": {
                        "description": "Whether category is active",
                        "type": "boolean",
                        "example": true
                    },
                    "sort_order": {
                        "description": "Display sort order",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "created_at_human": {
                        "description": "Human-readable creation time",
                        "type": "string",
                        "example": "2 weeks ago"
                    },
                    "updated_at_human": {
                        "description": "Human-readable update time",
                        "type": "string",
                        "example": "3 days ago"
                    },
                    "statistics": {
                        "description": "Category statistics (only included on show endpoint)",
                        "properties": {
                            "transaction_count": {
                                "type": "integer",
                                "example": 42
                            },
                            "total_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 1250.5
                            },
                            "current_month_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 350.25
                            },
                            "last_transaction_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2024-01-14"
                            },
                            "average_transaction": {
                                "type": "number",
                                "format": "float",
                                "example": 29.77
                            },
                            "budget_count": {
                                "type": "integer",
                                "example": 2
                            },
                            "active_budget_count": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "has_transactions": {
                        "description": "Whether category has any transactions",
                        "type": "boolean",
                        "example": true
                    },
                    "has_budgets": {
                        "description": "Whether category has any budgets",
                        "type": "boolean",
                        "example": true
                    },
                    "can_delete": {
                        "description": "Whether category can be deleted",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "CategoryTransactionResource": {
                "title": "Category Transaction Resource",
                "description": "Transaction resource for category transactions listing",
                "properties": {
                    "id": {
                        "description": "Transaction ID",
                        "type": "integer",
                        "example": 123
                    },
                    "description": {
                        "description": "Transaction description",
                        "type": "string",
                        "example": "Weekly groceries"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                    },
                    "formatted_amount": {
                        "description": "Formatted amount with currency and sign",
                        "type": "string",
                        "example": "-$85.50"
                    },
                    "type": {
                        "description": "Transaction type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "description": "Transaction date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-14"
                    },
                    "formatted_date": {
                        "description": "Human-readable date",
                        "type": "string",
                        "example": "Jan 14, 2024"
                    },
                    "notes": {
                        "description": "Transaction notes",
                        "type": "string",
                        "example": "Bought vegetables and fruits"
                    },
                    "tags": {
                        "description": "Transaction tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "food",
                            "essential"
                        ]
                    },
                    "reference_number": {
                        "description": "Reference number",
                        "type": "string",
                        "example": "INV-2024-001"
                    },
                    "is_cleared": {
                        "description": "Whether transaction is cleared",
                        "type": "boolean",
                        "example": true
                    },
                    "is_recurring": {
                        "description": "Whether transaction is recurring",
                        "type": "boolean",
                        "example": false
                    },
                    "account": {
                        "description": "Account information",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Checking Account"
                            },
                            "type": {
                                "type": "string",
                                "example": "checking"
                            },
                            "color": {
                                "type": "string",
                                "example": "#2196F3"
                            },
                            "icon": {
                                "type": "string",
                                "example": "account_balance"
                            }
                        },
                        "type": "object"
                    },
                    "transfer_account": {
                        "description": "Transfer destination account (only for transfers)",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-14T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-14T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "CategorySpendingAnalysis": {
                "title": "Category Spending Analysis",
                "description": "Spending analysis data for categories",
                "properties": {
                    "category": {
                        "$ref": "#/components/schemas/CategoryResource"
                    },
                    "current_month": {
                        "properties": {
                            "spent": {
                                "type": "number",
                                "format": "float",
                                "example": 450.75
                            },
                            "budget": {
                                "type": "number",
                                "format": "float",
                                "example": 500
                            },
                            "percentage": {
                                "type": "number",
                                "format": "float",
                                "example": 90.15
                            },
                            "transaction_count": {
                                "type": "integer",
                                "example": 12
                            }
                        },
                        "type": "object"
                    },
                    "last_month": {
                        "properties": {
                            "spent": {
                                "type": "number",
                                "format": "float",
                                "example": 380.5
                            },
                            "budget": {
                                "type": "number",
                                "format": "float",
                                "example": 500
                            },
                            "percentage": {
                                "type": "number",
                                "format": "float",
                                "example": 76.1
                            },
                            "transaction_count": {
                                "type": "integer",
                                "example": 10
                            }
                        },
                        "type": "object"
                    },
                    "average_monthly": {
                        "description": "Average monthly spending",
                        "type": "number",
                        "format": "float",
                        "example": 425.25
                    },
                    "trend": {
                        "description": "Spending trend",
                        "type": "string",
                        "enum": [
                            "increasing",
                            "decreasing",
                            "stable"
                        ],
                        "example": "increasing"
                    },
                    "trend_percentage": {
                        "description": "Trend percentage change",
                        "type": "number",
                        "format": "float",
                        "example": 18.5
                    }
                },
                "type": "object"
            },
            "CategoryTrend": {
                "title": "Category Trend",
                "description": "Category trend data over time",
                "properties": {
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 1
                    },
                    "category_name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Groceries"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2024-01-01"
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 125.5
                                },
                                "transaction_count": {
                                    "type": "integer",
                                    "example": 5
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CategoryIconsColors": {
                "title": "Category Icons and Colors",
                "description": "Available icons and colors for categories",
                "properties": {
                    "icons": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "shopping_cart"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "Shopping Cart"
                                },
                                "category": {
                                    "type": "string",
                                    "example": "commerce"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "colors": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "example": "#4CAF50"
                                },
                                "label": {
                                    "type": "string",
                                    "example": "Green"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "BulkUpdateCategoriesRequest": {
                "title": "Bulk Update Categories Request",
                "description": "Request body for bulk updating categories",
                "required": [
                    "categories"
                ],
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Updated Name"
                                },
                                "color": {
                                    "type": "string",
                                    "example": "#FF5722"
                                },
                                "icon": {
                                    "type": "string",
                                    "example": "new_icon"
                                },
                                "is_active": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "example": 3
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "ReorderCategoriesRequest": {
                "title": "Reorder Categories Request",
                "description": "Request body for reordering categories",
                "required": [
                    "categories"
                ],
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "sort_order"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "sort_order": {
                                    "type": "integer",
                                    "example": 0
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "MergeCategoriesRequest": {
                "title": "Merge Categories Request",
                "description": "Request body for merging two categories",
                "required": [
                    "source_category_id",
                    "target_category_id"
                ],
                "properties": {
                    "source_category_id": {
                        "description": "ID of the source category to merge from",
                        "type": "integer",
                        "example": 5
                    },
                    "target_category_id": {
                        "description": "ID of the target category to merge into",
                        "type": "integer",
                        "example": 3
                    },
                    "delete_source": {
                        "description": "Whether to delete the source category after merge",
                        "type": "boolean",
                        "default": false,
                        "example": true
                    }
                },
                "type": "object"
            },
            "MergeCategoriesResponse": {
                "title": "Merge Categories Response",
                "properties": {
                    "moved_transactions": {
                        "description": "Number of transactions moved",
                        "type": "integer",
                        "example": 25
                    },
                    "moved_budgets": {
                        "description": "Number of budgets moved",
                        "type": "integer",
                        "example": 2
                    },
                    "source_category": {
                        "description": "Source category name",
                        "type": "string",
                        "example": "Old Groceries"
                    },
                    "target_category": {
                        "description": "Target category name",
                        "type": "string",
                        "example": "Groceries"
                    },
                    "source_deleted": {
                        "description": "Whether source category was deleted",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "DefaultCategory": {
                "title": "Default Category",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Salary"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ]
                    },
                    "color": {
                        "type": "string",
                        "example": "#4CAF50"
                    },
                    "icon": {
                        "type": "string",
                        "example": "attach_money"
                    }
                },
                "type": "object"
            },
            "CategoryValidationError": {
                "title": "Category Validation Error Response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "A category with this name already exists for this type."
                                }
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Cannot change category type. This category has 42 transactions."
                                }
                            },
                            "color": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The color must be a valid hex color code (e.g., #FF0000)."
                                }
                            },
                            "is_active": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Cannot deactivate category with 5 transactions in the last 30 days."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DebtResource": {
                "title": "Debt Resource",
                "description": "Debt resource representation",
                "properties": {
                    "id": {
                        "description": "Debt ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Debt name",
                        "type": "string",
                        "example": "Chase Credit Card"
                    },
                    "type": {
                        "description": "Type of debt",
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "personal_loan",
                            "mortgage",
                            "auto_loan",
                            "student_loan"
                        ],
                        "example": "credit_card"
                    },
                    "type_label": {
                        "description": "Human-readable debt type",
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "original_balance": {
                        "description": "Original debt balance",
                        "type": "number",
                        "format": "float",
                        "example": 5000
                    },
                    "current_balance": {
                        "description": "Current debt balance",
                        "type": "number",
                        "format": "float",
                        "example": 3500
                    },
                    "paid_amount": {
                        "description": "Amount paid so far",
                        "type": "number",
                        "format": "float",
                        "example": 1500
                    },
                    "progress_percentage": {
                        "description": "Percentage of debt paid off",
                        "type": "number",
                        "format": "float",
                        "example": 30
                    },
                    "interest_rate": {
                        "description": "Annual interest rate percentage",
                        "type": "number",
                        "format": "float",
                        "example": 18.99
                    },
                    "minimum_payment": {
                        "description": "Minimum monthly payment",
                        "type": "number",
                        "format": "float",
                        "example": 125
                    },
                    "due_date": {
                        "description": "Monthly due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-15"
                    },
                    "days_until_due": {
                        "description": "Days until next due date",
                        "type": "integer",
                        "example": 7
                    },
                    "payment_frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "monthly",
                            "weekly",
                            "bi-weekly"
                        ],
                        "example": "monthly"
                    },
                    "payment_frequency_label": {
                        "description": "Human-readable payment frequency",
                        "type": "string",
                        "example": "Monthly"
                    },
                    "status": {
                        "description": "Debt status",
                        "type": "string",
                        "enum": [
                            "active",
                            "paid_off",
                            "closed"
                        ],
                        "example": "active"
                    },
                    "status_label": {
                        "description": "Human-readable status",
                        "type": "string",
                        "example": "Active"
                    },
                    "is_overdue": {
                        "description": "Whether payment is overdue",
                        "type": "boolean",
                        "example": false
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Balance transfer from another card",
                        "nullable": true
                    },
                    "payments": {
                        "description": "Payment history",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebtPaymentResource"
                        }
                    },
                    "latest_payment": {
                        "$ref": "#/components/schemas/DebtPaymentResource"
                    },
                    "total_payments": {
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 12
                            },
                            "total_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 1500
                            },
                            "total_principal": {
                                "type": "number",
                                "format": "float",
                                "example": 1200
                            },
                            "total_interest": {
                                "type": "number",
                                "format": "float",
                                "example": 300
                            }
                        },
                        "type": "object"
                    },
                    "estimated_payoff": {
                        "properties": {
                            "months_remaining": {
                                "type": "integer",
                                "example": 28
                            },
                            "payoff_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2027-06-15"
                            },
                            "total_interest": {
                                "type": "number",
                                "format": "float",
                                "example": 850
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T12:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "DebtPaymentResource": {
                "title": "Debt Payment Resource",
                "description": "Debt payment record",
                "properties": {
                    "id": {
                        "description": "Payment ID",
                        "type": "integer",
                        "example": 1
                    },
                    "debt_id": {
                        "description": "Associated debt ID",
                        "type": "integer",
                        "example": 5
                    },
                    "transaction_id": {
                        "description": "Associated transaction ID",
                        "type": "integer",
                        "example": 123,
                        "nullable": true
                    },
                    "amount": {
                        "description": "Total payment amount",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "principal": {
                        "description": "Principal portion of payment",
                        "type": "number",
                        "format": "float",
                        "example": 120
                    },
                    "interest": {
                        "description": "Interest portion of payment",
                        "type": "number",
                        "format": "float",
                        "example": 30
                    },
                    "payment_date": {
                        "description": "Date of payment",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "notes": {
                        "description": "Payment notes",
                        "type": "string",
                        "example": "Extra payment toward principal",
                        "nullable": true
                    },
                    "transaction": {
                        "$ref": "#/components/schemas/TransactionResource"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "CreateDebtRequest": {
                "title": "Create Debt Request",
                "required": [
                    "name",
                    "type",
                    "original_balance",
                    "current_balance",
                    "interest_rate",
                    "minimum_payment",
                    "due_date",
                    "payment_frequency"
                ],
                "properties": {
                    "name": {
                        "description": "Debt name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Chase Sapphire Credit Card"
                    },
                    "type": {
                        "description": "Type of debt",
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "personal_loan",
                            "mortgage",
                            "auto_loan",
                            "student_loan"
                        ],
                        "example": "credit_card"
                    },
                    "original_balance": {
                        "description": "Original debt amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 5000
                    },
                    "current_balance": {
                        "description": "Current balance",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 3500
                    },
                    "interest_rate": {
                        "description": "Annual interest rate percentage",
                        "type": "number",
                        "format": "float",
                        "maximum": 100,
                        "minimum": 0,
                        "example": 18.99
                    },
                    "minimum_payment": {
                        "description": "Minimum monthly payment",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 125
                    },
                    "due_date": {
                        "description": "Monthly due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-15"
                    },
                    "payment_frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "monthly",
                            "weekly",
                            "bi-weekly"
                        ],
                        "example": "monthly"
                    },
                    "status": {
                        "description": "Debt status",
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "paid_off",
                            "closed"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "0% APR until March 2025",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateDebtRequest": {
                "title": "Update Debt Request",
                "properties": {
                    "name": {
                        "description": "Debt name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Chase Freedom Credit Card"
                    },
                    "type": {
                        "description": "Type of debt",
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "personal_loan",
                            "mortgage",
                            "auto_loan",
                            "student_loan"
                        ],
                        "example": "credit_card"
                    },
                    "original_balance": {
                        "description": "Original debt amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 5000
                    },
                    "current_balance": {
                        "description": "Current balance",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 2800
                    },
                    "interest_rate": {
                        "description": "Annual interest rate percentage",
                        "type": "number",
                        "format": "float",
                        "maximum": 100,
                        "minimum": 0,
                        "example": 16.99
                    },
                    "minimum_payment": {
                        "description": "Minimum monthly payment",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 100
                    },
                    "due_date": {
                        "description": "Monthly due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-02-20"
                    },
                    "payment_frequency": {
                        "description": "Payment frequency",
                        "type": "string",
                        "enum": [
                            "monthly",
                            "weekly",
                            "bi-weekly"
                        ],
                        "example": "monthly"
                    },
                    "status": {
                        "description": "Debt status",
                        "type": "string",
                        "enum": [
                            "active",
                            "paid_off",
                            "closed"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Planning to pay off by end of year",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RecordPaymentRequest": {
                "title": "Record Debt Payment Request",
                "required": [
                    "amount",
                    "payment_date"
                ],
                "properties": {
                    "amount": {
                        "description": "Payment amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 200
                    },
                    "payment_date": {
                        "description": "Date of payment",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "notes": {
                        "description": "Payment notes",
                        "type": "string",
                        "example": "Extra $75 toward principal",
                        "nullable": true
                    },
                    "create_transaction": {
                        "description": "Whether to create a transaction record",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object"
            },
            "DebtSummary": {
                "title": "Debt Summary",
                "description": "Summary statistics for all debts",
                "properties": {
                    "total_debts": {
                        "description": "Number of active debts",
                        "type": "integer",
                        "example": 5
                    },
                    "total_original_balance": {
                        "description": "Sum of all original balances",
                        "type": "number",
                        "format": "float",
                        "example": 25000
                    },
                    "total_current_balance": {
                        "description": "Sum of all current balances",
                        "type": "number",
                        "format": "float",
                        "example": 18500
                    },
                    "total_paid_off": {
                        "description": "Total amount paid off",
                        "type": "number",
                        "format": "float",
                        "example": 6500
                    },
                    "average_interest_rate": {
                        "description": "Average interest rate across all debts",
                        "type": "number",
                        "format": "float",
                        "example": 15.75
                    },
                    "total_minimum_payment": {
                        "description": "Sum of all minimum payments",
                        "type": "number",
                        "format": "float",
                        "example": 650
                    },
                    "debts_by_type": {
                        "description": "Breakdown by debt type",
                        "type": "object",
                        "additionalProperties": {
                            "properties": {
                                "count": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "total_balance": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 8500
                                },
                                "average_interest_rate": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 18.99
                                },
                                "total_minimum_payment": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 250
                                }
                            },
                            "type": "object"
                        }
                    },
                    "highest_interest_debt": {
                        "$ref": "#/components/schemas/DebtResource"
                    },
                    "largest_balance_debt": {
                        "$ref": "#/components/schemas/DebtResource"
                    },
                    "next_due_debt": {
                        "$ref": "#/components/schemas/DebtResource"
                    },
                    "progress_percentage": {
                        "description": "Overall debt payoff progress",
                        "type": "number",
                        "format": "float",
                        "example": 26
                    },
                    "estimated_payoff_date": {
                        "description": "Estimated date when all debts will be paid off",
                        "type": "string",
                        "format": "date",
                        "example": "2027-12-15",
                        "nullable": true
                    },
                    "estimated_total_interest": {
                        "description": "Estimated total interest to be paid",
                        "type": "number",
                        "format": "float",
                        "example": 4850
                    },
                    "recent_payments": {
                        "description": "Recent payment history",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebtPaymentResource"
                        }
                    }
                },
                "type": "object"
            },
            "DebtPayoffSchedule": {
                "title": "Debt Payoff Schedule",
                "description": "Detailed payoff schedule for a debt",
                "properties": {
                    "debt": {
                        "$ref": "#/components/schemas/DebtResource"
                    },
                    "summary": {
                        "properties": {
                            "months_to_payoff": {
                                "type": "integer",
                                "example": 36
                            },
                            "payoff_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2028-01-15"
                            },
                            "total_payments": {
                                "type": "number",
                                "format": "float",
                                "example": 4500
                            },
                            "total_interest_paid": {
                                "type": "number",
                                "format": "float",
                                "example": 1000
                            },
                            "monthly_payment": {
                                "type": "number",
                                "format": "float",
                                "example": 125
                            }
                        },
                        "type": "object"
                    },
                    "schedule": {
                        "description": "Monthly payment breakdown",
                        "type": "array",
                        "items": {
                            "properties": {
                                "payment_number": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2025-02-15"
                                },
                                "beginning_balance": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 3500
                                },
                                "payment": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 125
                                },
                                "principal": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 70
                                },
                                "interest": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 55
                                },
                                "ending_balance": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 3430
                                }
                            },
                            "type": "object"
                        }
                    },
                    "extra_payment_scenario": {
                        "description": "Scenario with extra payments",
                        "properties": {
                            "extra_payment_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 50
                            },
                            "months_saved": {
                                "type": "integer",
                                "example": 12
                            },
                            "interest_saved": {
                                "type": "number",
                                "format": "float",
                                "example": 350
                            },
                            "new_payoff_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2027-01-15"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DebtConsolidationOptions": {
                "title": "Debt Consolidation Options",
                "description": "Analysis of debt consolidation scenarios",
                "properties": {
                    "current_situation": {
                        "properties": {
                            "total_balance": {
                                "type": "number",
                                "format": "float",
                                "example": 18500
                            },
                            "total_minimum_payment": {
                                "type": "number",
                                "format": "float",
                                "example": 650
                            },
                            "average_interest_rate": {
                                "type": "number",
                                "format": "float",
                                "example": 15.75
                            },
                            "number_of_debts": {
                                "type": "integer",
                                "example": 5
                            },
                            "debt_types": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "credit_card"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "consolidation_options": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "loan_term_months": {
                                    "type": "integer",
                                    "example": 36
                                },
                                "loan_term_years": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 3
                                },
                                "interest_rate": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 12
                                },
                                "monthly_payment": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 615
                                },
                                "total_payment": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 22140
                                },
                                "total_interest": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 3640
                                },
                                "savings": {
                                    "properties": {
                                        "monthly_payment_difference": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 35
                                        },
                                        "total_interest_saved": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1200
                                        },
                                        "months_saved": {
                                            "type": "integer",
                                            "example": 6
                                        }
                                    },
                                    "type": "object"
                                },
                                "is_beneficial": {
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "recommendation": {
                        "description": "Recommendation based on analysis",
                        "type": "string",
                        "example": "Consider the 36-month consolidation loan at 12% APR for maximum savings"
                    }
                },
                "type": "object"
            },
            "DebtTypes": {
                "title": "Debt Types Configuration",
                "description": "Available debt types and their configurations",
                "type": "object",
                "additionalProperties": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "example": "Credit Card"
                        },
                        "description": {
                            "type": "string",
                            "example": "Credit card debt"
                        },
                        "icon": {
                            "type": "string",
                            "example": "credit_card"
                        },
                        "color": {
                            "type": "string",
                            "example": "#F44336"
                        },
                        "typical_interest_rate": {
                            "type": "string",
                            "example": "15-25%"
                        },
                        "payment_frequency": {
                            "type": "string",
                            "example": "monthly"
                        }
                    },
                    "type": "object"
                }
            },
            "FinancialGoalResource": {
                "title": "Financial Goal Resource",
                "description": "Financial goal resource representation",
                "properties": {
                    "id": {
                        "description": "Goal ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Goal name",
                        "type": "string",
                        "example": "Emergency Fund"
                    },
                    "description": {
                        "description": "Goal description",
                        "type": "string",
                        "example": "Save 6 months of living expenses for emergencies",
                        "nullable": true
                    },
                    "target_amount": {
                        "description": "Target amount to save",
                        "type": "number",
                        "format": "float",
                        "example": 10000
                    },
                    "current_amount": {
                        "description": "Current saved amount",
                        "type": "number",
                        "format": "float",
                        "example": 3500
                    },
                    "remaining_amount": {
                        "description": "Amount remaining to reach goal",
                        "type": "number",
                        "format": "float",
                        "example": 6500
                    },
                    "progress_percentage": {
                        "description": "Percentage of goal completed",
                        "type": "number",
                        "format": "float",
                        "example": 35
                    },
                    "target_date": {
                        "description": "Target completion date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "days_remaining": {
                        "description": "Days until target date",
                        "type": "integer",
                        "example": 320
                    },
                    "months_remaining": {
                        "description": "Months until target date",
                        "type": "integer",
                        "example": 10
                    },
                    "priority": {
                        "description": "Goal priority level",
                        "type": "string",
                        "enum": [
                            "high",
                            "medium",
                            "low"
                        ],
                        "example": "high"
                    },
                    "priority_label": {
                        "description": "Human-readable priority",
                        "type": "string",
                        "example": "High Priority"
                    },
                    "status": {
                        "description": "Goal status",
                        "type": "string",
                        "enum": [
                            "active",
                            "completed",
                            "paused",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "status_label": {
                        "description": "Human-readable status",
                        "type": "string",
                        "example": "Active"
                    },
                    "color": {
                        "description": "Goal color for UI display",
                        "type": "string",
                        "example": "#2196F3"
                    },
                    "icon": {
                        "description": "Goal icon identifier",
                        "type": "string",
                        "example": "flag"
                    },
                    "monthly_target": {
                        "description": "Suggested monthly contribution",
                        "type": "number",
                        "format": "float",
                        "example": 650,
                        "nullable": true
                    },
                    "required_monthly_contribution": {
                        "description": "Required monthly contribution to meet target",
                        "type": "number",
                        "format": "float",
                        "example": 650
                    },
                    "milestone_settings": {
                        "description": "Milestone configuration",
                        "properties": {
                            "milestones": {
                                "description": "Percentage milestones",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "example": 25
                                }
                            },
                            "notifications_enabled": {
                                "description": "Whether milestone notifications are enabled",
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "current_milestone": {
                        "description": "Current achieved milestone percentage",
                        "type": "integer",
                        "example": 25
                    },
                    "next_milestone": {
                        "description": "Next milestone percentage",
                        "type": "integer",
                        "example": 50,
                        "nullable": true
                    },
                    "is_on_track": {
                        "description": "Whether goal is on track to meet target date",
                        "type": "boolean",
                        "example": true
                    },
                    "projected_completion_date": {
                        "description": "Projected completion based on current progress",
                        "type": "string",
                        "format": "date",
                        "example": "2025-11-15",
                        "nullable": true
                    },
                    "contributions": {
                        "description": "Goal contributions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GoalContributionResource"
                        }
                    },
                    "latest_contribution": {
                        "$ref": "#/components/schemas/GoalContributionResource"
                    },
                    "contributions_summary": {
                        "properties": {
                            "total_contributions": {
                                "type": "integer",
                                "example": 15
                            },
                            "total_amount": {
                                "type": "number",
                                "format": "float",
                                "example": 3500
                            },
                            "average_contribution": {
                                "type": "number",
                                "format": "float",
                                "example": 233.33
                            },
                            "largest_contribution": {
                                "type": "number",
                                "format": "float",
                                "example": 500
                            },
                            "this_month_total": {
                                "type": "number",
                                "format": "float",
                                "example": 650
                            },
                            "last_month_total": {
                                "type": "number",
                                "format": "float",
                                "example": 600
                            }
                        },
                        "type": "object"
                    },
                    "completed_at": {
                        "description": "Completion timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-15T14:30:00.000000Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T12:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "GoalContributionResource": {
                "title": "Goal Contribution Resource",
                "description": "Goal contribution record",
                "properties": {
                    "id": {
                        "description": "Contribution ID",
                        "type": "integer",
                        "example": 1
                    },
                    "financial_goal_id": {
                        "description": "Associated goal ID",
                        "type": "integer",
                        "example": 5
                    },
                    "transaction_id": {
                        "description": "Associated transaction ID",
                        "type": "integer",
                        "example": 123,
                        "nullable": true
                    },
                    "amount": {
                        "description": "Contribution amount",
                        "type": "number",
                        "format": "float",
                        "example": 500
                    },
                    "date": {
                        "description": "Contribution date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "notes": {
                        "description": "Contribution notes",
                        "type": "string",
                        "example": "Bonus contribution from tax refund",
                        "nullable": true
                    },
                    "transaction": {
                        "$ref": "#/components/schemas/TransactionResource"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "remember": {
                        "description": "Remember me token",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "currency": {
                        "description": "Default currency",
                        "type": "string",
                        "example": "PHP"
                    },
                    "timezone": {
                        "description": "User timezone",
                        "type": "string",
                        "example": "Asia/Manila"
                    },
                    "language": {
                        "description": "Preferred language",
                        "type": "string",
                        "example": "en"
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    },
                    "error": {
                        "type": "string",
                        "example": "Error details"
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "field_name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {}
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource?page=10"
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 10
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost:8000/api/resource"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 150
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UnauthorizedResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "title": "Transaction",
                "description": "Financial transaction model",
                "required": [
                    "id",
                    "user_id",
                    "account_id",
                    "category_id",
                    "amount",
                    "type",
                    "date",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "account_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-15"
                    },
                    "description": {
                        "type": "string",
                        "example": "Grocery shopping at SM Supermarket"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Weekly groceries",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "groceries",
                            "food",
                            "essentials"
                        ]
                    },
                    "reference_number": {
                        "type": "string",
                        "example": "REF-2025-001",
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "example": "SM North EDSA",
                        "nullable": true
                    },
                    "receipt_url": {
                        "type": "string",
                        "example": "receipts/2025/01/receipt1.jpg",
                        "nullable": true
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "example": false
                    },
                    "recurring_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "transfer_account_id": {
                        "description": "For transfer transactions",
                        "type": "integer",
                        "nullable": true
                    },
                    "is_cleared": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CreateTransactionRequest": {
                "title": "Create Transaction Request",
                "description": "Request body for creating a new transaction",
                "required": [
                    "account_id",
                    "category_id",
                    "description",
                    "amount",
                    "type",
                    "date"
                ],
                "properties": {
                    "account_id": {
                        "description": "ID of the account",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "ID of the category",
                        "type": "integer",
                        "example": 5
                    },
                    "transfer_account_id": {
                        "description": "ID of transfer destination account (required for transfers)",
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "description": {
                        "description": "Transaction description",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Weekly groceries"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0.01,
                        "example": 125.5
                    },
                    "type": {
                        "description": "Transaction type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "description": "Transaction date (cannot be future)",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Bought vegetables, fruits, and dairy products",
                        "nullable": true
                    },
                    "tags": {
                        "description": "Transaction tags",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "example": [
                            "groceries",
                            "food",
                            "essential"
                        ]
                    },
                    "reference_number": {
                        "description": "Reference or invoice number",
                        "type": "string",
                        "maxLength": 50,
                        "example": "INV-2024-001",
                        "nullable": true
                    },
                    "location": {
                        "description": "Transaction location",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Walmart Superstore, Main Street",
                        "nullable": true
                    },
                    "attachments": {
                        "description": "File attachments (jpg, jpeg, png, pdf, doc, docx - max 2MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "is_recurring": {
                        "description": "Whether transaction is recurring",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "recurring_type": {
                        "description": "Recurring frequency (required if is_recurring is true)",
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "quarterly",
                            "yearly"
                        ],
                        "example": "monthly",
                        "nullable": true
                    },
                    "recurring_interval": {
                        "description": "Recurring interval (required if is_recurring is true)",
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "example": 1,
                        "nullable": true
                    },
                    "recurring_end_date": {
                        "description": "When recurring transactions should end",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31",
                        "nullable": true
                    },
                    "is_cleared": {
                        "description": "Whether transaction is cleared/reconciled",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object"
            },
            "UpdateTransactionRequest": {
                "title": "Update Transaction Request",
                "description": "Request body for updating an existing transaction. All fields are optional.",
                "properties": {
                    "account_id": {
                        "description": "ID of the account",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "ID of the category",
                        "type": "integer",
                        "example": 5
                    },
                    "transfer_account_id": {
                        "description": "ID of transfer destination account",
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "description": {
                        "description": "Transaction description",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated grocery shopping"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float",
                        "minimum": 0.01,
                        "example": 150.75
                    },
                    "type": {
                        "description": "Transaction type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "date": {
                        "description": "Transaction date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Updated notes",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "example": [
                            "groceries",
                            "updated"
                        ]
                    },
                    "reference_number": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "INV-2024-002",
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated location",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "example": false
                    },
                    "recurring_type": {
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "quarterly",
                            "yearly"
                        ],
                        "nullable": true
                    },
                    "recurring_interval": {
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "nullable": true
                    },
                    "recurring_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "is_cleared": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "BulkCreateTransactionRequest": {
                "title": "Bulk Create Transactions Request",
                "description": "Request body for creating multiple transactions at once",
                "required": [
                    "transactions"
                ],
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "required": [
                                "account_id",
                                "category_id",
                                "description",
                                "amount",
                                "type",
                                "date"
                            ],
                            "properties": {
                                "account_id": {
                                    "type": "integer"
                                },
                                "category_id": {
                                    "type": "integer"
                                },
                                "transfer_account_id": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0.01
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "income",
                                        "expense",
                                        "transfer"
                                    ]
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "notes": {
                                    "type": "string",
                                    "maxLength": 1000,
                                    "nullable": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "reference_number": {
                                    "type": "string",
                                    "maxLength": 50,
                                    "nullable": true
                                },
                                "location": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "nullable": true
                                },
                                "is_cleared": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 100,
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "BulkDeleteTransactionRequest": {
                "title": "Bulk Delete Transactions Request",
                "description": "Request body for deleting multiple transactions",
                "required": [
                    "transaction_ids"
                ],
                "properties": {
                    "transaction_ids": {
                        "description": "Array of transaction IDs to delete",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "minItems": 1,
                        "example": [
                            123,
                            124,
                            125
                        ]
                    }
                },
                "type": "object"
            },
            "ImportTransactionRequest": {
                "title": "Import Transactions Request",
                "description": "Request body for importing transactions from CSV",
                "required": [
                    "csv_file"
                ],
                "properties": {
                    "csv_file": {
                        "description": "CSV file containing transactions",
                        "type": "string",
                        "format": "binary"
                    },
                    "column_mappings": {
                        "description": "Mapping of CSV columns to transaction fields",
                        "properties": {
                            "date": {
                                "type": "string",
                                "example": "Transaction Date"
                            },
                            "description": {
                                "type": "string",
                                "example": "Description"
                            },
                            "amount": {
                                "type": "string",
                                "example": "Amount"
                            },
                            "type": {
                                "type": "string",
                                "example": "Type"
                            },
                            "category": {
                                "type": "string",
                                "example": "Category"
                            },
                            "account": {
                                "type": "string",
                                "example": "Account"
                            }
                        },
                        "type": "object"
                    },
                    "import_options": {
                        "properties": {
                            "skip_duplicates": {
                                "type": "boolean",
                                "default": true
                            },
                            "date_format": {
                                "type": "string",
                                "default": "Y-m-d",
                                "example": "Y-m-d"
                            },
                            "default_account_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "default_category_id": {
                                "type": "integer",
                                "example": 5
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TransactionResource": {
                "title": "Transaction Resource",
                "description": "Transaction resource response",
                "properties": {
                    "id": {
                        "description": "Transaction ID",
                        "type": "integer",
                        "example": 123
                    },
                    "description": {
                        "description": "Transaction description",
                        "type": "string",
                        "example": "Weekly groceries"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float",
                        "example": 125.5
                    },
                    "formatted_amount": {
                        "description": "Formatted amount with currency and sign",
                        "type": "string",
                        "example": "-$125.50"
                    },
                    "type": {
                        "description": "Transaction type",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense",
                            "transfer"
                        ],
                        "example": "expense"
                    },
                    "type_label": {
                        "description": "Human-readable type label",
                        "type": "string",
                        "example": "Expense"
                    },
                    "date": {
                        "description": "Transaction date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "formatted_date": {
                        "description": "Human-readable date",
                        "type": "string",
                        "example": "Jan 15, 2024"
                    },
                    "notes": {
                        "description": "Transaction notes",
                        "type": "string",
                        "example": "Bought vegetables and fruits",
                        "nullable": true
                    },
                    "tags": {
                        "description": "Transaction tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "groceries",
                            "food",
                            "essential"
                        ]
                    },
                    "reference_number": {
                        "description": "Reference number",
                        "type": "string",
                        "example": "INV-2024-001",
                        "nullable": true
                    },
                    "location": {
                        "description": "Transaction location",
                        "type": "string",
                        "example": "Walmart Superstore",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "integer"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                },
                                "thumbnail": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "is_image": {
                                    "type": "boolean"
                                },
                                "uploaded_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "is_recurring": {
                        "description": "Whether transaction is recurring",
                        "type": "boolean",
                        "example": false
                    },
                    "recurring_type": {
                        "type": "string",
                        "enum": [
                            "weekly",
                            "monthly",
                            "quarterly",
                            "yearly"
                        ],
                        "example": "monthly",
                        "nullable": true
                    },
                    "recurring_interval": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "recurring_end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31",
                        "nullable": true
                    },
                    "is_cleared": {
                        "description": "Whether transaction is cleared",
                        "type": "boolean",
                        "example": true
                    },
                    "cleared_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:00:00Z",
                        "nullable": true
                    },
                    "sync_id": {
                        "description": "External sync ID",
                        "type": "string",
                        "nullable": true
                    },
                    "synced_at": {
                        "description": "Last sync timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "account": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Checking Account"
                            },
                            "type": {
                                "type": "string",
                                "example": "checking"
                            },
                            "color": {
                                "type": "string",
                                "example": "#2196F3"
                            },
                            "icon": {
                                "type": "string",
                                "example": "account_balance"
                            },
                            "currency": {
                                "type": "string",
                                "example": "USD"
                            }
                        },
                        "type": "object"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Groceries"
                            },
                            "type": {
                                "type": "string",
                                "example": "expense"
                            },
                            "color": {
                                "type": "string",
                                "example": "#4CAF50"
                            },
                            "icon": {
                                "type": "string",
                                "example": "shopping_cart"
                            }
                        },
                        "type": "object"
                    },
                    "transfer_account": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "color": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "created_at_human": {
                        "description": "Human-readable creation time",
                        "type": "string",
                        "example": "2 hours ago"
                    },
                    "updated_at_human": {
                        "description": "Human-readable update time",
                        "type": "string",
                        "example": "30 minutes ago"
                    },
                    "is_transfer": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_income": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_expense": {
                        "type": "boolean",
                        "example": true
                    },
                    "has_attachments": {
                        "type": "boolean",
                        "example": true
                    },
                    "attachment_count": {
                        "type": "integer",
                        "example": 2
                    },
                    "has_tags": {
                        "type": "boolean",
                        "example": true
                    },
                    "tag_count": {
                        "type": "integer",
                        "example": 3
                    },
                    "has_notes": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_future": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_today": {
                        "type": "boolean",
                        "example": false
                    },
                    "days_ago": {
                        "description": "Days since the transaction",
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "TransactionSummary": {
                "title": "Transaction Summary",
                "description": "Summary statistics for transactions",
                "properties": {
                    "total_income": {
                        "type": "number",
                        "format": "float",
                        "example": 5000
                    },
                    "total_expenses": {
                        "type": "number",
                        "format": "float",
                        "example": 3250.75
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 1749.25
                    },
                    "transaction_count": {
                        "type": "integer",
                        "example": 42
                    },
                    "average_income": {
                        "type": "number",
                        "format": "float",
                        "example": 2500
                    },
                    "average_expense": {
                        "type": "number",
                        "format": "float",
                        "example": 325.08
                    },
                    "largest_income": {
                        "type": "number",
                        "format": "float",
                        "example": 3000
                    },
                    "largest_expense": {
                        "type": "number",
                        "format": "float",
                        "example": 850.5
                    }
                },
                "type": "object"
            },
            "ImportTransactionResult": {
                "title": "Import Transaction Result",
                "description": "Result of transaction import operation",
                "properties": {
                    "imported": {
                        "description": "Number of successfully imported transactions",
                        "type": "integer",
                        "example": 25
                    },
                    "skipped": {
                        "description": "Number of skipped transactions (duplicates)",
                        "type": "integer",
                        "example": 3
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "line": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "error": {
                                    "type": "string",
                                    "example": "Invalid date format"
                                },
                                "data": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total_processed": {
                        "description": "Total number of rows processed",
                        "type": "integer",
                        "example": 28
                    }
                },
                "type": "object"
            },
            "TransactionValidationError": {
                "title": "Transaction Validation Error Response",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "account_id": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The selected account does not belong to you."
                                }
                            },
                            "category_id": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Category type does not match transaction type."
                                }
                            },
                            "transfer_account_id": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Transfer account is required for transfer transactions."
                                }
                            },
                            "amount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The amount must be at least 0.01."
                                }
                            },
                            "date": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The transaction date cannot be in the future."
                                }
                            },
                            "transaction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "Cannot modify critical fields of cleared transactions older than 30 days."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "example": "avatars/user1.jpg",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "example": "+639123456789",
                        "nullable": true
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15",
                        "nullable": true
                    },
                    "currency": {
                        "description": "3-letter currency code",
                        "type": "string",
                        "example": "PHP"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "Asia/Manila"
                    },
                    "language": {
                        "type": "string",
                        "example": "en"
                    },
                    "preferences": {
                        "properties": {
                            "theme": {
                                "type": "string",
                                "example": "dark"
                            },
                            "notifications": {
                                "type": "boolean",
                                "example": true
                            },
                            "email_alerts": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "192.168.1.1",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T08:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T08:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication endpoints"
        },
        {
            "name": "Users",
            "description": "User management endpoints"
        },
        {
            "name": "Accounts",
            "description": "Account management endpoints"
        },
        {
            "name": "Transactions",
            "description": "Transaction management endpoints"
        },
        {
            "name": "Categories",
            "description": "Category management endpoints"
        },
        {
            "name": "Budgets",
            "description": "Budget management endpoints"
        },
        {
            "name": "Debts",
            "description": "Debt management endpoints"
        },
        {
            "name": "Bills",
            "description": "Bills and subscriptions endpoints"
        },
        {
            "name": "Financial Goals",
            "description": "Financial Goals"
        },
        {
            "name": "System",
            "description": "System"
        }
    ]
}